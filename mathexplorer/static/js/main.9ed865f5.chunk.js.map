{"version":3,"sources":["i18n/index.ts","components/app/navbar/NavbarItem.tsx","components/app/navbar/Navbar.tsx","themes/light.ts","themes/dark.ts","hooks/useTheme.tsx","components/app/GlobalStyle.tsx","components/common/InputText.tsx","store/session/actions.ts","components/views/calculator/common/InputField.tsx","hooks/useHotkeyDispatch.tsx","hooks/useHotkeyRef.tsx","hooks/useRefEffect.tsx","components/views/calculator/common/utils.tsx","components/common/Sidebar.tsx","components/views/calculator/common/CalculatorSidebar.tsx","components/views/calculator/inputforms/InputFormWithSidebar.tsx","components/views/calculator/inputforms/SimpleInputForm.tsx","components/common/Card.tsx","components/views/calculator/inputforms/AdvancedInputForm.tsx","components/views/calculator/inputforms/document/cells/Cell.tsx","hooks/useSettings.tsx","hooks/useNumberFormat.tsx","hooks/useSession.tsx","components/views/calculator/inputforms/document/cells/MathCell.tsx","components/views/calculator/inputforms/document/cells/TextCell.tsx","components/icons/Text.svg","components/icons/Math.svg","components/icons/Pen.svg","components/icons/Reload.svg","components/icons/Trash.svg","components/icons/Import.svg","components/icons/Export.svg","components/views/calculator/inputforms/document/toolbar/IconButton.tsx","hooks/useLoadDocument.tsx","components/views/calculator/inputforms/document/toolbar/DocumentInputFormToolbar.tsx","components/views/calculator/inputforms/document/DocumentInputForm.tsx","components/views/calculator/Calculator.tsx","components/views/settings/SettingsItem.tsx","components/views/settings/Settings.tsx","components/views/manual/ManualItem.tsx","utils.ts","components/views/manual/ManualCategory.tsx","components/views/manual/Manual.tsx","components/views/about/CenteredDefinitionList.tsx","components/views/about/About.tsx","components/app/appConfig.tsx","components/app/App.tsx","store/settings/settingsUtils.ts","store/settings/reducers.ts","store/session/reducers.ts","store/index.ts","components/app/AppWrapper.tsx","store/createStore.ts","serviceWorker.ts","index.tsx"],"names":["resources","en","translation","de","i18n","use","initReactI18next","init","lng","fallbackLng","keySeparator","interpolation","escapeValue","catch","console","log","StyledLink","styled","Link","props","enabled","NavbarItem","name","path","location","useLocation","useState","active","setActive","useEffect","pathname","useTranslation","t","to","toString","Container","header","theme","navbar","backgroundColor","Nav","nav","Logo","img","navbarHeight","Title","span","UL","ul","Navbar","title","items","src","process","alt","aria-label","map","item","index","lightTheme","app","backgroundImage","color","navbarItem","hoverBackgroundColor","card","cardHeading","sidebar","sidebarItem","inputText","outline","icon","filter","borderColor","darkTheme","themes","fontSizes","l","m","s","getFontSize","size","getNavbarHeight","useTheme","useSelector","state","settings","interfaceSettings","fontSize","getTheme","GlobalStyle","createGlobalStyle","length","InputText","input","changeCurrentInput","type","payload","pushMathCell","content","language","significantDigits","selectCell","setEditCell","value","InputField","React","forwardRef","forwardedRef","dispatch","useDispatch","session","currentInput","interfaceLanguage","mathLanguage","mathSettings","numberFormat","ref","role","placeholder","onChange","event","target","onKeyPress","key","hotkeyOptions","useHotkeyDispatch","hotkey","action","dispatchAction","setDispatchAction","useHotkeys","e","preventDefault","Array","forEach","a","useHotkeyRef","effect","current","useRefEffect","deps","getMathCells","cells","flatMap","cell","aside","Sidebar","children","CalculatorSidebar","inputForm","onClick","div","InputFormWithSidebar","StyledOutputField","SimpleInputForm","lastOutput","lastCell","slice","output","getLastOutput","document","outputRef","useRef","inputRef","r","focus","select","focusInput","focusOutput","readOnly","Card","section","MathHistoryContainer","MathHistoryContainerWrapper","MathHistoryItemContainer","showCellNumbers","MathHistoryItemLineCounter","MathHistoryItemLabel","MathHistoryItemValue","copyable","MathHistoryItem","copyOnClick","copyCellContentOnClick","showLineNumbers","cellLanguageTag","languageTag","lang","MathHistory","containerRef","scrollTop","scrollHeight","AdvancedInputForm","mathHistory","i","Cell","li","selected","useSettings","useNumberFormat","useSession","Input","MathCell","inputValue","setInputValue","selectedCell","onDoubleClick","editCell","updateMathCell","onKeyDown","TextArea","textarea","TextCell","setValue","textAreaRef","style","height","updateTextCell","Button","button","Img","IconButton","disabled","useLoadDocument","documentData","setDocumentData","loadDocument","Wrapper","DocumentInputFormToolbar","PenIcon","TextIcon","MathIcon","ReloadIcon","TrashIcon","ImportIcon","window","showOpenFilePicker","fileHandle","getFile","file","text","data","JSON","parse","loadData","error","ExportIcon","stringify","options","types","description","accept","showSaveFilePicker","createWritable","writable","write","close","saveData","Document","main","CellList","DocumentInputForm","toggleEditCell","getOutput","selectInputForm","Calculator","currentOutput","clearInput","clearOutput","clearMemory","clearAll","copyInputAndOutput","navigator","clipboard","writeText","Label","label","Select","SettingsItem","setter","id","aria-labelledby","option","SettingsCard","Settings","languageOptions","languageWithInheritOptions","enableOptions","fontSizeOptions","inputFormOptions","updateSettings","updatedSettings","updateInterfaceSettings","updatedValues","copyManualContentOnClick","toUpperCase","x","Synopsis","dt","Description","dd","ManualItem","synopsis","synopsisIsMath","history","useHistory","roles","push","join","split","line","escapeRegExp","str","replace","ManualCategory","filterFunction","match","Manual","setFilter","searchRef","marginBottom","Object","entries","hotkeys","replaceAll","letter","toLowerCase","nd","constants","functions","List","Item","ListItem","leftValue","rightValue","align","Content","ListItemContent","lines","CenteredDefinitionList","About","version","author","email","contributors","c","license","marginTop","dependencies","dep","charAt","substring","dangerouslySetInnerHTML","__html","url","routes","render","navbarProps","view","App","route","exact","defaultSettings","localStorageSettingsKey","saveSettings","localStorage","removeItem","setItem","initialState","settingsData","getItem","undefined","loadSettings","settingsReducer","getElementsByTagName","changeLanguage","script","numberdrive","Script","defaultState","evaluateInput","sigDigits","evaluate","parseInt","getItems","clearScope","clearUserScope","sessionReducer","createReducer","CHANGE_CURRENT_INPUT","CLEAR_CURRENT_INPUT","CLEAR_DOCUMENT_CELLS","CLEAR_MATH_USER_SCOPE","PUSH_MATH_CELL","nextState","concat","PUSH_TEXT_CELL","UPDATE_MATH_CELL","updatedCell","_","SELECT_CELL","SET_EDIT_CELL","UPDATE_TEXT_CELL","REFRESH_MATH_CELLS","updatedCells","DELETE_CELL","LOAD_DOCUMENT","rootReducer","combineReducers","store","createStore","initStore","AppWrapper","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","scope","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.9ed865f5.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport enLangData from \"./translations/en.json\";\nimport deLangData from \"./translations/de.json\"\n\nconst resources = {\n    en: {translation: enLangData},\n    de: {translation: deLangData}\n};\n\ni18n\n    .use(initReactI18next)\n    .init({\n        resources,\n        lng: \"en\",\n        fallbackLng: \"en\",\n        keySeparator: false,\n        interpolation: {\n            escapeValue: false\n        }\n    }).catch(console.log);\n\n\nexport default i18n;\n","import React, {useEffect, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {Link} from \"react-router-dom\";\nimport {useLocation} from \"react-router-dom\";\nimport {useTranslation} from \"react-i18next\";\n\nconst StyledLink = styled(Link)`\n    padding: 0 20px;\n    color: white;\n    text-decoration: none;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    ${\n        (props: {enabled: string}) => props.enabled === \"true\"\n            ? `border-bottom: 4px solid white; padding-top: 4px;` : null\n    }\n    &:hover {\n        background-color: rgba(255, 255, 255, 0.2);\n    }\n    \n    &:focus {\n        outline: 2px solid white;\n    }\n`;\n\ninterface Props {\n    name: string,\n    path: string\n}\n\nconst NavbarItem: React.FC<Props> = ({name, path}) => {\n    const location = useLocation();\n    const [active, setActive] = useState(false);\n    useEffect(() => {\n        setActive(location.pathname === path)\n    }, [location, path]);\n    const [t] = useTranslation();\n\n    return (\n        <StyledLink\n            to={path}\n            enabled={active.toString()}\n        >{t(name)}</StyledLink>\n    )\n}\n\nexport default NavbarItem","import React from \"react\";\nimport styled from \"styled-components\";\nimport NavbarItem from \"./NavbarItem\";\n\nconst Container = styled.header`\n    display: flex;\n    font-size: 36pt;\n    background-color: ${props => props.theme.navbar.backgroundColor};\n    color: white;\n    height: 100%;\n    align-items: center;\n    box-shadow: 0 5px 5px rgba(0, 0, 0, 0.20);\n    z-index: 1;\n`;\n\nconst Nav = styled.nav`\n    display: flex;\n    height: 100%;\n`;\n\nconst Logo = styled.img`\n    width: ${props => props.theme.navbarHeight};\n    height: ${props => props.theme.navbarHeight};\n    padding: 10px;\n`;\n\nconst Title = styled.span`\n    margin-right: auto;\n    padding: 10px;\n`;\n\nconst UL = styled.ul`\n    display: flex;\n    flex-direction: row;\n    list-style-type: none;\n    height: 100%;\n    margin: 0;\n`;\n\ninterface PropsItem {\n    name: string,\n    path: string\n}\n\ninterface Props {\n    title: string,\n    items: PropsItem[]\n}\n\nconst Navbar: React.FC<Props> = ({title, items}) => {\n\n    return (\n        <Container>\n            <Logo src={process.env.PUBLIC_URL + \"/logo.png\"} alt=\"logo\"/>\n            <Title aria-label=\"Title\">{title}</Title>\n            <Nav aria-label=\"Main Menu\">\n                <UL>\n                    {\n                        items.map((item, index) => (\n                            <li>\n                                <NavbarItem key={index} name={item.name} path={item.path}/>\n                            </li>\n                        ))\n                    }\n                </UL>\n            </Nav>\n        </Container>\n    );\n}\n\nexport default Navbar;","const lightTheme = {\n  app: {\n    backgroundColor: \"white\",\n    backgroundImage: \"/background/light.png\"\n  },\n  navbar: {\n    backgroundColor: \"#1D3971\",\n    color: \"white\"\n  },\n  navbarItem: {\n    hoverBackgroundColor: \"rgba(255, 255, 255, 0.2)\"\n  },\n  card: {\n    backgroundColor: \"white\",\n    color: \"black\"\n  },\n  cardHeading: {\n    backgroundColor: \"rgba(0, 0, 0, 0.08)\"\n  },\n  sidebar: {\n    backgroundColor: \"white\",\n    color: \"black\"\n  },\n  sidebarItem: {\n    hoverBackgroundColor: \"rgba(0, 0, 0, 0.2)\"\n  },\n  inputText: {\n    backgroundColor: \"white\",\n    outline: \"2px solid black\",\n    color: \"black\"\n  },\n  icon: {\n    filter: \"invert(0%)\",\n    borderColor: \"white\"\n  }\n};\n\nexport default lightTheme;","const darkTheme = {\n  app: {\n    backgroundColor: \"#171717\",\n    backgroundImage: \"/background/dark.png\"\n  },\n  navbar: {\n    backgroundColor: \"#060606\",\n    color: \"white\"\n  },\n  navbarItem: {\n    hoverBackgroundColor: \"rgba(255, 255, 255, 0.1)\"\n  },\n  card: {\n    backgroundColor: \"#2b2b2b\",\n    color: \"#d6d6d6\"\n  },\n  cardHeading: {\n    backgroundColor: \"rgba(0, 0, 0, 0.08)\"\n  },\n  sidebar: {\n    backgroundColor: \"#2b2b2b\",\n    color: \"white\"\n  },\n  sidebarItem: {\n    hoverBackgroundColor: \"rgba(255, 255, 255, 0.1)\"\n  },\n  inputText: {\n    backgroundColor: \"#2b2b2b\",\n    outline: \"2px solid white\",\n    color: \"white\"\n  },\n  icon: {\n    filter: \"invert(100%)\",\n    borderColor: \"white\"\n  }\n};\n\nexport default darkTheme;","import lightTheme from \"../themes/light\";\nimport darkTheme from \"../themes/dark\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../store\";\nimport {DefaultTheme} from \"styled-components\";\n\nexport type ThemeName = \"light\" | \"dark\";\nexport const themes = [\"light\", \"dark\"];\n\nconst fontSizes = {\n    large: {\n        l: \"36pt\",\n        m: \"28pt\",\n        s: \"20pt\"\n    },\n    medium: {\n        l: \"28pt\",\n        m: \"22pt\",\n        s: \"18pt\"\n    },\n    small: {\n        l: \"22pt\",\n        m: \"16pt\",\n        s: \"12pt\"\n    }\n};\n\nconst getFontSize = (size: string) => {\n    switch (size) {\n        case \"large\": return fontSizes.large;\n        case \"medium\": return fontSizes.medium;\n        case \"small\": return fontSizes.small;\n        default: return fontSizes.large;\n    }\n}\n\nconst getTheme = (theme: string) => {\n    switch (theme) {\n        case \"light\": return lightTheme;\n        case \"dark\": return darkTheme;\n        default: return lightTheme;\n    }\n}\n\nconst getNavbarHeight = (size: string) => {\n    switch (size) {\n        case \"medium\": return \"65px\";\n        case \"small\": return \"50px\";\n        default: return \"80px\";\n    }\n}\n\nconst useTheme = (): DefaultTheme => {\n    const theme = useSelector((state: RootState) => state?.settings?.interfaceSettings?.theme);\n    const fontSize = useSelector((state: RootState) => state?.settings?.interfaceSettings?.fontSize);\n    return {...getTheme(theme), fontSize: getFontSize(fontSize), navbarHeight: getNavbarHeight(fontSize)};\n}\n\nexport default useTheme;","import {createGlobalStyle} from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`        \n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background-color: ${props => props.theme.app.backgroundColor};\n    background-size: cover;\n    background-repeat: repeat;\n    ${\n            props => props.theme.app.backgroundImage.length > 0\n                    ? `background-image: url(${process.env.PUBLIC_URL + props.theme.app.backgroundImage});` : null\n    }\n  }\n  \n  #root {\n    display: grid;\n    grid-template-rows: ${props => props.theme.navbarHeight} 1fr;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n  }\n\n  code {\n    font-family: 'JetBrains Mono', monospace;\n  }\n\n  * {\n    box-sizing: border-box;\n    font-size: ${props => props.theme.fontSize.m};\n    font-family: 'Roboto', sans-serif;\n    font-weight: 300;\n    outline: none;\n  }\n`;\n\nexport default GlobalStyle;","import styled from \"styled-components\";\n\nconst InputText = styled.input`\n    width: 100%;\n    padding: 20px;\n    border: none;\n    box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.1);\n    background-color: ${props => props.theme.inputText.backgroundColor};\n    color: ${props => props.theme.inputText.color};\n    \n    &:focus {\n        outline: ${props => props.theme.inputText.outline};\n    }\n`;\n\nexport default InputText;","import {\n    ChangeCurrentInput,\n    ClearCurrentInput,\n    ClearDocumentCells,\n    ClearMathUserScope, DeleteCell, LoadDocument,\n    PushMathCell,\n    PushTextCell, RefreshMathCells,\n    SelectCell,\n    SetEditCell,\n    UpdateMathCell,\n    UpdateTextCell,\n    Document as DocumentType,\n} from \"./types\";\nimport {Language, SignificantDigits} from \"../settings/types\";\n\nexport const changeCurrentInput = (input: string): ChangeCurrentInput => {\n    return {\n        type: \"CHANGE_CURRENT_INPUT\",\n        payload: input\n    };\n};\n\nexport const clearCurrentInput = (): ClearCurrentInput => {\n    return {\n        type: \"CLEAR_CURRENT_INPUT\"\n    };\n};\n\nexport const pushMathCell = (content: string, language: Language, significantDigits: SignificantDigits): PushMathCell => {\n    return {\n        type: \"PUSH_MATH_CELL\",\n        payload: {\n            content,\n            language,\n            significantDigits\n        }\n    };\n};\n\nexport const clearMathHistory = (): ClearDocumentCells => {\n    return {\n        type: \"CLEAR_DOCUMENT_CELLS\"\n    };\n};\n\nexport const clearMathUserScope = (): ClearMathUserScope => {\n    return {\n        type: \"CLEAR_MATH_USER_SCOPE\"\n    };\n};\n\nexport const pushTextCell = (content: string): PushTextCell => {\n    return {\n        type: \"PUSH_TEXT_CELL\",\n        payload: content\n    };\n};\n\nexport const updateMathCell = (input: string, index: number, language: Language, significantDigits: SignificantDigits): UpdateMathCell => {\n    return {\n        type: \"UPDATE_MATH_CELL\",\n        payload: {\n            language,\n            significantDigits,\n            input,\n            index\n        }\n    };\n};\n\nexport const selectCell = (index: number): SelectCell => {\n    return {\n        type: \"SELECT_CELL\",\n        payload: index\n    };\n};\n\nexport const setEditCell = (value: boolean): SetEditCell => {\n    return {\n        type: \"SET_EDIT_CELL\",\n        payload: value\n    };\n};\n\nexport const updateTextCell = (index: number, content: string): UpdateTextCell => {\n    return {\n        type: \"UPDATE_TEXT_CELL\",\n        payload: {index, content}\n    };\n};\n\nexport const refreshMathCells = (language: Language, significantDigits: SignificantDigits): RefreshMathCells => {\n    return {\n        type: \"REFRESH_MATH_CELLS\",\n        payload: {\n            language, significantDigits\n        }\n    };\n};\n\nexport const deleteCell = (index: number): DeleteCell => {\n    return {\n        type: \"DELETE_CELL\",\n        payload: index\n    };\n};\n\nexport const loadDocument = (document: DocumentType): LoadDocument => {\n    return {\n        type: \"LOAD_DOCUMENT\",\n        payload: document\n    };\n};","import React from \"react\";\nimport InputText from \"../../../common/InputText\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changeCurrentInput, pushMathCell} from \"../../../../store/session/actions\";\nimport {RootState} from \"../../../../store\";\nimport {useTranslation} from \"react-i18next\";\n\nconst InputField = React.forwardRef((props, forwardedRef) => {\n    const dispatch = useDispatch();\n    const value = useSelector((state: RootState) => state.session.currentInput);\n    const interfaceLanguage = useSelector((state: RootState) => state.settings.interfaceSettings.language);\n    const mathLanguage = useSelector((state: RootState) => state.settings.mathSettings.numberFormat);\n    const significantDigits = useSelector((state: RootState) => state.settings.mathSettings.significantDigits);\n    const [t] = useTranslation();\n\n    const changeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(changeCurrentInput(event.target.value));\n    };\n\n    const keypressInput = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === \"Enter\")\n            dispatch(pushMathCell(\n                value,\n                mathLanguage === \"inherit\" ? interfaceLanguage : mathLanguage,\n                significantDigits\n            ));\n    }\n\n    // @ts-ignore\n    return (<InputText ref={forwardedRef}\n        type=\"text\"\n        role=\"input math\"\n        placeholder={t(\"common.input\")}\n        aria-label={t(\"common.input\")}\n        onChange={changeInput}\n        onKeyPress={keypressInput}\n        value={value}\n    />);\n});\n\nexport default InputField;","import {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {useHotkeys} from \"react-hotkeys-hook\";\n\nconst hotkeyFilter = () => true;\nexport const hotkeyOptions = {filter: hotkeyFilter};\n\ninterface Action {\n    type: string,\n}\n\nconst useHotkeyDispatch = (hotkey: string, action: Action | Action[]) => {\n    const dispatch = useDispatch()\n    const [dispatchAction, setDispatchAction] = useState(false);\n    useHotkeys(hotkey, (e) => {\n        e.preventDefault();\n        setDispatchAction(true)\n    }, hotkeyOptions, []);\n\n    if (dispatchAction) {\n        setDispatchAction(false);\n        if (action instanceof Array) {\n            action.forEach(a => dispatch(a));\n        } else {\n            dispatch(action);\n        }\n    }\n}\n\nexport default useHotkeyDispatch;","import React from \"react\";\nimport {useHotkeys} from \"react-hotkeys-hook\";\nimport {hotkeyOptions} from \"./useHotkeyDispatch\";\n\nconst useHotkeyRef = (hotkey: string, ref: React.RefObject<any>, effect: (ref: React.RefObject<any>) => void) => {\n    useHotkeys(hotkey, () => {\n        if (ref.current)\n            effect(ref);\n    }, hotkeyOptions, []);\n};\n\nexport default useHotkeyRef;","import React, {useEffect} from \"react\";\n\nconst useRefEffect = (ref: React.RefObject<any>, effect: (ref: React.RefObject<any>) => void, deps: any[] = []) => {\n    useEffect(() => {\n        if (ref.current)\n            effect(ref);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, deps);\n}\n\nexport default useRefEffect;","import {Cell, MathCell} from \"../../../../store/session/types\";\n\nexport const getMathCells = (cells: Cell[]): MathCell[] => {\n    return cells.flatMap(cell => cell.type === \"MATH\" ? [cell] : []);\n}\n\nexport const getLastOutput = (cells: Cell[]): string => {\n    const lastCell = getMathCells(cells).slice(-1)[0];\n    return lastCell ? lastCell.output : \"\";\n}","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.aside`\n    background-color: ${props => props.theme.sidebar.backgroundColor};\n    color: ${props => props.theme.sidebar.color};\n    box-shadow: 5px 0 5px rgba(0, 0, 0, 0.15);\n    display: flex;\n    flex-direction: column;\n    \n    & button {\n        background: none;\n        border: none;\n        outline: none;\n        font-size: ${props => props.theme.fontSize.m};\n        padding: 0.5em 2em 0.5em 1em;\n        text-align: left;\n        color: inherit;\n    }\n    \n    & button:hover {\n        background-color: ${props => props.theme.sidebarItem.hoverBackgroundColor};\n        font-weight: 400;\n    }\n    \n    & button:disabled:hover {\n        background: none;\n        font-weight: 300;\n    }\n    \n    & button:focus {\n        border: 2px solid black;\n    }\n`;\n\nconst Sidebar: React.FC<{}> = ({children}) => {\n    return (\n        <Container role=\"toolbar\">\n            {children}\n        </Container>\n    )\n};\n\nexport default Sidebar;","import React from \"react\";\nimport Sidebar from \"../../../common/Sidebar\";\nimport {useTranslation} from \"react-i18next\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {clearCurrentInput, clearMathHistory, clearMathUserScope} from \"../../../../store/session/actions\";\nimport {RootState} from \"../../../../store\";\n\nconst CalculatorSidebar: React.FC = () => {\n    const dispatch = useDispatch();\n    const [t] = useTranslation();\n    const inputForm = useSelector((state: RootState) => state.settings.interfaceSettings.inputForm);\n\n    const clearAll = () => {\n        dispatch(clearMathHistory());\n        dispatch(clearCurrentInput());\n        dispatch(clearMathUserScope());\n    };\n\n    return (\n        <Sidebar>\n            <button\n                onClick={() => dispatch(clearMathHistory())}\n                aria-label={t(inputForm !== \"simple\" ? \"calculator.clear_history\" : \"calculator.clear_output\")}\n            >\n                {t(inputForm !== \"simple\" ? \"calculator.clear_history\" : \"calculator.clear_output\")}\n            </button>\n            <button\n                onClick={() => dispatch(clearCurrentInput())}\n                aria-label={t(\"calculator.clear_input\")}\n            >\n                {t(\"calculator.clear_input\")}\n            </button>\n            <button\n                onClick={() => dispatch(clearMathUserScope())}\n                aria-label={t(\"calculator.clear_memory\")}\n            >\n                {t(\"calculator.clear_memory\")}\n            </button>\n            <button\n                onClick={clearAll}\n                aria-label={t(\"calculator.clear_all\")}\n            >\n                {t(\"calculator.clear_all\")}\n            </button>\n            {/*<button disabled={true} style={{marginTop:\"auto\"}}>New Document</button>\n            <button disabled={true}>Save Document</button>\n            <button disabled={true}>Load Document</button>*/}\n        </Sidebar>\n    );\n}\n\nexport default CalculatorSidebar;","import React from \"react\";\nimport styled from \"styled-components\";\nimport CalculatorSidebar from \"../common/CalculatorSidebar\";\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: auto 1fr;\n    height: 100%;\n`;\n\nconst InputFormWithSidebar: React.FC = ({children}) => {\n    return (\n        <Container>\n            <CalculatorSidebar/>\n            {children}\n        </Container>\n    );\n};\n\nexport default InputFormWithSidebar;","import React, {useRef} from \"react\";\nimport styled from \"styled-components\";\nimport {RootState} from \"../../../../store\";\nimport {useSelector} from \"react-redux\";\nimport InputText from \"../../../common/InputText\";\nimport InputField from \"../common/InputField\";\nimport {useTranslation} from \"react-i18next\";\nimport {focusInput, focusOutput} from \"../../../../hotkeys.json\";\nimport useHotkeyRef from \"../../../../hooks/useHotkeyRef\";\nimport useRefEffect from \"../../../../hooks/useRefEffect\";\nimport {getLastOutput} from \"../common/utils\";\nimport InputFormWithSidebar from \"./InputFormWithSidebar\";\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledOutputField = styled(InputText)`\n  margin-top: 20px;\n`;\n\nconst SimpleInputForm: React.FC = () => {\n    const lastOutput = getLastOutput(useSelector((state: RootState) => state.session.document.cells));\n    const outputRef = useRef<HTMLInputElement>(null);\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [t] = useTranslation();\n    useRefEffect(outputRef, r => {\n        r.current.focus();\n        r.current.select()\n    }, [lastOutput]);\n    useRefEffect(inputRef, r => r.current.focus());\n    useHotkeyRef(focusInput, inputRef, (r) => r.current.focus());\n    useHotkeyRef(focusOutput, outputRef, (r) => r.current.focus());\n\n    const outputOnKeyPress = (event: React.KeyboardEvent) => {\n        if (event.key === \"Enter\" && inputRef.current)\n            inputRef.current.focus();\n    }\n\n\n    return (\n        <InputFormWithSidebar>\n            <Container>\n                <InputField ref={inputRef} aria-label={t(\"common.input\")}/>\n                <StyledOutputField\n                    aria-label={t(\"common.output\")}\n                    role=\"input math\"\n                    type=\"text\"\n                    readOnly={true}\n                    placeholder={t(\"common.output\")}\n                    value={lastOutput}\n                    ref={outputRef}\n                    onKeyPress={outputOnKeyPress}\n                />\n            </Container>\n        </InputFormWithSidebar>\n    );\n};\n\nexport default SimpleInputForm;","import styled from \"styled-components\";\n\nconst Card = styled.section`\n    color: ${props => props.theme.card.color};    \n    background-color: ${props => props.theme.card.backgroundColor};\n    box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.1);\n    font-size: ${props => props.theme.fontSize.m};\n\n    & h1 {\n        font-size: ${props => props.theme.fontSize.l};\n        background-color: rgba(0, 0, 0, 0.08);\n        margin: 0;\n        padding: 10px 20px;\n    }\n  \n  & a {\n    color: inherit;\n    font-weight: bolder;\n  }\n`;\n\nexport default Card;","import React, {useEffect, useRef} from \"react\";\nimport styled from \"styled-components\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"../../../../store\";\nimport InputField from \"../common/InputField\";\nimport Card from \"../../../common/Card\";\nimport {useTranslation} from \"react-i18next\";\nimport {useHotkeys} from \"react-hotkeys-hook\";\nimport {focusInput} from \"../../../../hotkeys.json\";\nimport {changeCurrentInput} from \"../../../../store/session/actions\";\nimport useRefEffect from \"../../../../hooks/useRefEffect\";\nimport {getMathCells} from \"../common/utils\";\nimport InputFormWithSidebar from \"./InputFormWithSidebar\";\n\nconst Container = styled.div`\n  padding: 20px;\n  display: grid;\n  overflow: hidden;\n  grid-template-rows: 1fr auto;\n  grid-gap: 20px;\n`;\n\nconst MathHistoryContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n`;\n\nconst MathHistoryContainerWrapper = styled(Card)`\n  overflow-y: auto;\n  -ms-overflow-style: none;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst MathHistoryItemContainer = styled.div<{ showCellNumbers: boolean }>`\n  display: grid;\n  grid-template-columns: ${props => props.showCellNumbers ? \"80px auto 1fr\" : \"auto 1fr\"};\n  grid-template-rows: auto auto;\n  padding: 10px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.25);\n`;\n\nconst MathHistoryItemLineCounter = styled.div`\n  grid-row: span 2;\n  opacity: 0.4;\n  user-select: none;\n  padding: 10px\n`;\n\nconst MathHistoryItemLabel = styled.div`\n  text-align: right;\n  font-weight: 300;\n  font-size: 20pt;\n  align-self: center;\n  padding: 0 10px;\n`;\n\nconst MathHistoryItemValue = styled.span<{ copyable: boolean }>`\n  padding: 10px;\n  ${\n          props => props.copyable ? \"&:hover { background-color: rgba(0, 0, 0, 0.1); }\" : null\n  }\n`;\n\ninterface MathHistoryItemProps {\n    index: number,\n    input: string,\n    output: string\n}\n\nconst MathHistoryItem: React.FC<MathHistoryItemProps> = ({index, input, output}) => {\n    const [t] = useTranslation();\n    const copyOnClick = useSelector((state: RootState) => state.settings.interfaceSettings.copyCellContentOnClick);\n    const showCellNumbers = useSelector((state: RootState) => state.settings.interfaceSettings.showLineNumbers);\n    const language = useSelector((state: RootState) => state.settings.interfaceSettings.language);\n    const cellLanguageTag = useSelector((state: RootState) => state.settings.interfaceSettings.cellLanguageTag);\n    const dispatch = useDispatch();\n\n    const languageTag = cellLanguageTag === \"inherit\" ? language : cellLanguageTag;\n\n    const onClick = (type: \"input\" | \"output\") => {\n        if (copyOnClick)\n            dispatch(changeCurrentInput(type === \"input\"\n                ? input\n                : output\n            ));\n    };\n\n    return (\n        <MathHistoryItemContainer showCellNumbers={showCellNumbers}>\n            {showCellNumbers ? <MathHistoryItemLineCounter>#{index + 1}</MathHistoryItemLineCounter> : null}\n            <MathHistoryItemLabel>{t(\"common.input\")}</MathHistoryItemLabel>\n            <MathHistoryItemValue\n                lang={languageTag}\n                copyable={copyOnClick}\n                onClick={() => onClick(\"input\")}\n            > {input}</MathHistoryItemValue>\n            <MathHistoryItemLabel>{t(\"common.output\")}</MathHistoryItemLabel>\n            <MathHistoryItemValue\n                lang={languageTag}\n                copyable={copyOnClick}\n                onClick={() => onClick(\"output\")}\n            > {output}</MathHistoryItemValue>\n        </MathHistoryItemContainer>\n    );\n}\n\nconst MathHistory: React.FC<{ items: MathHistoryItemProps[] }> = ({items}) => {\n    const containerRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (containerRef.current)\n            containerRef.current.scrollTop = containerRef.current.scrollHeight;\n    }, [items])\n\n    return (\n        <MathHistoryContainerWrapper ref={containerRef}>\n            <MathHistoryContainer>\n                {\n                    items.map(item => <MathHistoryItem\n                        key={item.index}\n                        index={item.index}\n                        input={item.input}\n                        output={item.output}\n                    />)\n                }\n            </MathHistoryContainer>\n        </MathHistoryContainerWrapper>\n    )\n}\n\nconst AdvancedInputForm: React.FC = () => {\n    const mathHistory = getMathCells(useSelector((state: RootState) => state.session.document.cells));\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [t] = useTranslation();\n    useHotkeys(focusInput, () => {\n        if (inputRef.current)\n            inputRef.current.focus();\n    }, {filter: () => true}, []);\n    useRefEffect(inputRef, (r) => r.current.focus(), []);\n\n    return (\n        <InputFormWithSidebar>\n            <Container>\n                <MathHistory items={mathHistory.map((item, i) => ({...item, index: i}))}/>\n                <InputField ref={inputRef} aria-label={t(\"common.input\")}/>\n            </Container>\n        </InputFormWithSidebar>\n    );\n};\n\nexport default AdvancedInputForm;","import styled from \"styled-components\";\n\nconst Cell = styled.li<{ selected: boolean }>`\n  margin: 10px 0;\n  ${props => props.selected === true\n          ? ` border-color: white;\n              border-style: solid;\n              border-width: 1px 1px 1px 4px;\n              padding: 10px 10px 10px 7px;`\n          : ` border: 1px solid rgba(255, 255, 255, 0.2);\n              padding: 10px;`\n  }\n  \n  & dd, dt {\n    padding: 0;\n    margin: 0;\n  }\n  \n  & dl {\n    padding: 0;\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport default Cell;","import {useSelector} from \"react-redux\";\nimport {RootState} from \"../store\";\nimport {Settings} from \"../store/settings/types\";\n\nconst useSettings = (): Settings => {\n    return useSelector((state: RootState) => state.settings);\n}\n\nexport default useSettings;","import useSettings from \"./useSettings\";\n\nconst useNumberFormat = () => {\n    const settings = useSettings();\n    return settings.mathSettings.numberFormat === \"inherit\"\n        ? settings.interfaceSettings.language\n        : settings.mathSettings.numberFormat;\n}\n\nexport default useNumberFormat;","import {useSelector} from \"react-redux\";\nimport {RootState} from \"../store\";\n\nconst useSession = () => {\n    return useSelector((state: RootState) => state.session);\n}\n\nexport default useSession;","import React, {useEffect, useRef, useState} from \"react\";\nimport styled from \"styled-components\";\nimport Cell from \"./Cell\";\nimport InputText from \"../../../../../common/InputText\";\nimport {useDispatch} from \"react-redux\";\nimport useNumberFormat from \"../../../../../../hooks/useNumberFormat\";\nimport useSettings from \"../../../../../../hooks/useSettings\";\nimport useSession from \"../../../../../../hooks/useSession\";\nimport {selectCell, setEditCell, updateMathCell} from \"../../../../../../store/session/actions\";\n\nconst Container = styled(Cell)`\n  display: grid;\n`;\n\nconst Input = styled(InputText)`\n  background-color: inherit;\n  padding: 0;\n  box-shadow: none;\n  margin: 0;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\ninterface MathCellProps {\n    input: string,\n    output: string,\n    index: number\n}\n\nconst MathCell: React.FC<MathCellProps> = ({input, output, index}) => {\n    const settings = useSettings();\n    const session = useSession();\n    const dispatch = useDispatch();\n    const numberFormat = useNumberFormat();\n    const [inputValue, setInputValue] = useState(input);\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    useEffect(() => {\n        if (inputRef.current)\n            inputRef.current.focus();\n    }, []);\n\n    const submitChange = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === \"Enter\") {\n            dispatch(updateMathCell(inputValue, index, numberFormat, settings.mathSettings.significantDigits));\n            dispatch(setEditCell(false));\n        }\n    }\n\n    const onKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === \"Escape\") {\n            dispatch(setEditCell(false));\n        }\n    }\n\n    const setSelection = () => {\n        if (session.selectedCell !== index) {\n            dispatch(setEditCell(false));\n            dispatch(selectCell(index));\n        }\n    };\n\n    const enterEditMode = () => {\n        dispatch(selectCell(index));\n        dispatch(setEditCell(true));\n    }\n\n    return (\n        <Container\n            onClick={setSelection}\n            selected={index === session.selectedCell}\n            onDoubleClick={enterEditMode}\n        >\n            {\n                session.editCell && index == session.selectedCell ? (\n                    <div>\n                        <Input\n                            ref={inputRef}\n                            value={inputValue}\n                            onChange={event => setInputValue(event.target.value)}\n                            onKeyPress={submitChange}\n                            onKeyDown={onKeyDown}\n                        />\n                    </div>\n                ) : (\n                    <dl>\n                        <dt>{input}</dt>\n                        <dd>{output}</dd>\n                    </dl>\n                )\n            }\n        </Container>\n    );\n};\n\nexport default MathCell;","import React, {useEffect, useRef, useState} from \"react\";\nimport styled from \"styled-components\";\nimport Cell from \"./Cell\";\nimport ReactMarkdown from \"react-markdown\";\nimport useSession from \"../../../../../../hooks/useSession\";\nimport {selectCell, setEditCell, updateTextCell} from \"../../../../../../store/session/actions\";\nimport {useDispatch} from \"react-redux\";\n\nconst Container = styled(Cell)`\n  & * {\n    background-color: inherit;\n    color: inherit;\n    border: none;\n  }\n  \n  & ul {\n    list-style-type: disc;\n  }\n  \n  & > h1 {\n    font-size: 1.5em;\n  }\n\n  & > h2 {\n    font-size: 1.4em;\n  }\n\n  & > h3 {\n    font-size: 1.3em;\n  }\n\n  & > h4 {\n    font-size: 1.2em;\n  }\n\n  & > h5 {\n    font-size: 1.1em;\n  }\n\n  & > h6 {\n    font-size: 1em;\n  }\n  \n  & > h1, h2, h3, h4, h5, h6 {\n    margin: 0 0 0.2em 0;\n    padding: 0;\n    font-weight: bolder;\n  }\n  \n  & > p {\n    margin: 5px 0;\n  }\n  \n  & > pre {\n    margin: 10px 0;\n    padding: 5px 10px;\n    border-radius: 8px;\n    background-color: rgba(0, 0, 0, 0.2);\n  }\n  & > pre code {\n    background-color: transparent;\n  }\n\n  & p > code {\n    padding: 5px;\n    border-radius: 8px;\n    background-color: rgba(0, 0, 0, 0.2);\n  }\n  \n  & strong {\n    font-weight: bold;\n  }\n`;\n\nconst TextArea = styled.textarea`\n  width: 100%;\n  margin: 0;\n  height: 25vh;\n`;\n\ninterface TextCellProps {\n    index: number,\n    content: string\n}\n\nconst TextCell: React.FC<TextCellProps> = ({index, content}) => {\n    const dispatch = useDispatch();\n    const session = useSession();\n    const [value, setValue] = useState(content);\n    const textAreaRef = useRef<HTMLTextAreaElement>(null);\n    useEffect(() => {\n        if (textAreaRef.current && session.selectedCell === index && session.editCell)\n            textAreaRef.current.focus();\n    }, [session.editCell, session.selectedCell, index]);\n    useEffect(() => {\n        if (textAreaRef.current) {\n            // @ts-ignore\n            textAreaRef.current.style.height = textAreaRef.current?.scrollHeight + \"px\";\n        }\n    },[value, session.editCell])\n\n    const selectThisCell = () => {\n        if (index !== session.selectedCell) {\n            dispatch(setEditCell(false));\n            dispatch(selectCell(index));\n        }\n    };\n\n    const enterEditMode = () => {\n        dispatch(setEditCell(true));\n    };\n\n    const changeValue = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setValue(event.target.value);\n    };\n\n    const saveValue = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        if (event.key === \"Escape\") {\n            dispatch(updateTextCell(index, value));\n            dispatch(setEditCell(false));\n        }\n    };\n\n    return (\n        <Container\n            selected={index === session.selectedCell}\n            onClick={selectThisCell}\n            onDoubleClick={enterEditMode}\n        >\n            {\n                index === session.selectedCell && session.editCell\n                    ? (<TextArea\n                        ref={textAreaRef}\n                        value={value}\n                        onChange={changeValue}\n                        onKeyDown={saveValue}\n                    />)\n                    : (<ReactMarkdown children={content}/>)\n            }\n        </Container>\n    );\n};\n\nexport default TextCell","export default __webpack_public_path__ + \"static/media/Text.70c55635.svg\";","export default __webpack_public_path__ + \"static/media/Math.432b21f4.svg\";","export default __webpack_public_path__ + \"static/media/Pen.6fec3190.svg\";","export default __webpack_public_path__ + \"static/media/Reload.034a8b21.svg\";","export default __webpack_public_path__ + \"static/media/Trash.a3cd3226.svg\";","export default __webpack_public_path__ + \"static/media/Import.b3dbc33f.svg\";","export default __webpack_public_path__ + \"static/media/Export.0beb946f.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n  opacity: 0.5;\n  width: 100%;\n  padding: 10px;\n  background-color: inherit;\n  border: none;\n  outline: none;\n  \n  &:disabled {\n    opacity: 0.1;\n  }\n\n  &:enabled:hover {\n    opacity: 1;\n    border: 1px solid ${props => props.theme.icon.borderColor};\n    background-color: ${props => props.theme.sidebarItem.hoverBackgroundColor};\n    padding: 9px;\n  }\n\n  &:first-child {\n    border-radius: 8px 8px 0 0;\n  }\n\n  &:last-child {\n    border-radius: 0 0 8px 8px;\n  }\n`;\n\nconst Img = styled.img`\n  filter: ${props => props.theme.icon.filter};\n`;\n\ninterface IconProps {\n    src: string,\n    onClick?: () => void,\n    disabled?: boolean\n}\n\nconst IconButton: React.FC<IconProps> = ({src, onClick, disabled}) => {\n    return (\n        <Button disabled={!onClick || disabled}>\n            <Img src={src} onClick={onClick}/>\n        </Button>\n    );\n};\n\nexport default IconButton;","import {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {loadDocument} from \"../store/session/actions\";\nimport {Document as DocumentType} from \"../store/session/types\";\n\nconst useLoadDocument = () => {\n    const [documentData, setDocumentData] = useState<DocumentType | null>(null);\n    const dispatch = useDispatch();\n\n    if (documentData !== null) {\n        dispatch(loadDocument(documentData));\n        setDocumentData(null);\n    }\n\n    return setDocumentData;\n}\n\nexport default useLoadDocument;","import React from \"react\";\nimport styled from \"styled-components\";\nimport TextIcon from \"../../../../../icons/Text.svg\";\nimport MathIcon from \"../../../../../icons/Math.svg\";\nimport PenIcon from \"../../../../../icons/Pen.svg\";\nimport ReloadIcon from \"../../../../../icons/Reload.svg\";\nimport TrashIcon from \"../../../../../icons/Trash.svg\";\nimport ImportIcon from \"../../../../../icons/Import.svg\";\nimport ExportIcon from \"../../../../../icons/Export.svg\";\nimport {useDispatch} from \"react-redux\";\nimport {\n    deleteCell as deleteCellAction,\n    pushMathCell,\n    pushTextCell,\n    refreshMathCells,\n    selectCell,\n    setEditCell\n} from \"../../../../../../store/session/actions\";\nimport useSession from \"../../../../../../hooks/useSession\";\nimport useNumberFormat from \"../../../../../../hooks/useNumberFormat\";\nimport useSettings from \"../../../../../../hooks/useSettings\";\nimport IconButton from \"./IconButton\";\nimport {getMathCells} from \"../../../common/utils\";\nimport useLoadDocument from \"../../../../../../hooks/useLoadDocument\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Container = styled.div`\n  width: 80px;\n  display: flex;\n  flex-direction: column;\n  background-color: ${props => props.theme.card.backgroundColor};\n  box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n`;\n\nconst DocumentInputFormToolbar: React.FC = () => {\n    const dispatch = useDispatch();\n    const session = useSession();\n    const settings = useSettings();\n    const numberFormat = useNumberFormat();\n    const loadDocument = useLoadDocument();\n\n    const addMathCell = () => {\n        dispatch(selectCell(session.document.cells.length));\n        dispatch(pushMathCell(\"\", numberFormat, settings.mathSettings.significantDigits));\n        dispatch(setEditCell(true));\n    };\n\n    const addTextCell = () => {\n        dispatch(selectCell(session.document.cells.length));\n        dispatch(pushTextCell(\"\"));\n        dispatch(setEditCell(true));\n    };\n\n    const toggleEditCell = () => {\n        dispatch(setEditCell(!session.editCell));\n    };\n\n    const refresh = () => {\n        dispatch(refreshMathCells(numberFormat, settings.mathSettings.significantDigits));\n    };\n\n    const deleteCell = () => {\n        dispatch(deleteCellAction(session.selectedCell));\n    };\n\n    const documentHasMathCells = () => {\n        return getMathCells(session.document.cells).length > 0;\n    }\n\n    const isCellSelected = () => {\n        return !!session.document.cells[session.selectedCell];\n    };\n\n    const exportDocument = () => {\n        const documentData = JSON.stringify(session.document, null, 4);\n        const saveData = async () => {\n            const options = {\n                types: [{\n                    description: 'JSON Files',\n                    accept: {\n                        'application/json': ['.json'],\n                    }\n                }]\n            };\n            // @ts-ignore\n            const fileHandle = await window.showSaveFilePicker(options);\n            const writable = await fileHandle.createWritable();\n            writable.write(documentData);\n            writable.close();\n        }\n        saveData().catch(console.error);\n    };\n\n    const importDocument = () => {\n        const loadData = async () => {\n            // @ts-ignore\n            const [fileHandle] = await window.showOpenFilePicker();\n            const file = await fileHandle.getFile();\n            const content = await file.text();\n            const data = JSON.parse(content);\n            if (typeof data === \"object\") {\n                if (typeof data.title === \"string\") {\n                    if (data.cells instanceof Array) {\n                        data.cells.forEach((cell: any) => {\n                            if (cell.type === \"MATH\" && typeof cell.input === \"string\" && typeof cell.output === \"string\")\n                                return;\n                            if (cell.type === \"TEXT\" && typeof cell.content === \"string\")\n                                return;\n                            throw \"file data validation failed\";\n                        });\n                        loadDocument(data);\n                        return;\n                    }\n                }\n            }\n            throw \"file data validation failed\";\n        }\n        loadData().catch(console.error);\n    };\n\n    return (\n        <Wrapper>\n            <Container>\n                <IconButton src={PenIcon} onClick={toggleEditCell}/>\n                <IconButton src={TextIcon} onClick={addTextCell}/>\n                <IconButton src={MathIcon} onClick={addMathCell}/>\n                <IconButton\n                    src={ReloadIcon}\n                    onClick={refresh}\n                    disabled={!documentHasMathCells()}\n                />\n                <IconButton\n                    src={TrashIcon}\n                    onClick={deleteCell}\n                    disabled={!isCellSelected()}\n                />\n                <IconButton src={ImportIcon} onClick={importDocument}/>\n                <IconButton src={ExportIcon} onClick={exportDocument}/>\n            </Container>\n        </Wrapper>\n    )\n};\n\nexport default DocumentInputFormToolbar;","import React from \"react\";\nimport styled from \"styled-components\";\nimport MathCell from \"./cells/MathCell\";\nimport useHotkeyDispatch from \"../../../../../hooks/useHotkeyDispatch\";\nimport {toggleEditCell} from \"../../../../../hotkeys.json\";\nimport useSession from \"../../../../../hooks/useSession\";\nimport {setEditCell} from \"../../../../../store/session/actions\";\nimport TextCell from \"./cells/TextCell\";\nimport DocumentInputFormToolbar from \"./toolbar/DocumentInputFormToolbar\";\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr;\n  overflow: hidden;\n  grid-gap: 20px;\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  color: ${props => props.theme.card.color};\n`;\n\nconst Document = styled.main`\n  background-color: ${props => props.theme.card.backgroundColor};\n  box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.2);\n  padding: 10px;\n  overflow: auto;\n  border-radius: 8px;\n\n  & h1 {\n    padding: 10px;\n    font-weight: bolder;\n  }\n\n  & button {\n    background-color: inherit;\n    color: inherit;\n    border: 1px solid white;\n    padding: 0.25em 1em;\n  }\n\n  & button:hover {\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n`;\n\nconst CellList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n`;\n\n// todo: render and edit document title\nconst DocumentInputForm: React.FC = () => {\n    const session = useSession();\n    const cells = session.document.cells;\n    useHotkeyDispatch(toggleEditCell, setEditCell(!session.editCell));\n\n    return (\n        <Container>\n            <DocumentInputFormToolbar/>\n            <Document>\n                <CellList>\n                    {\n                        cells.map((cell, i) => cell.type === \"MATH\"\n                            ? (<MathCell\n                                key={i}\n                                input={cell.input}\n                                output={cell.output}\n                                index={i}\n                            />)\n                            : (<TextCell\n                                key={i}\n                                index={i}\n                                content={cell.content}\n                            />))\n                    }\n                </CellList>\n            </Document>\n        </Container>\n    );\n};\n\nexport default DocumentInputForm;","import React from \"react\";\nimport SimpleInputForm from \"./inputforms/SimpleInputForm\";\nimport AdvancedInputForm from \"./inputforms/AdvancedInputForm\";\nimport DocumentInputForm from \"./inputforms/document/DocumentInputForm\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../../../store\";\nimport {clearAll, clearInput, clearMemory, clearOutput, copyInputAndOutput} from \"../../../hotkeys.json\";\nimport {clearCurrentInput, clearMathHistory, clearMathUserScope} from \"../../../store/session/actions\";\nimport useHotkeyDispatch, {hotkeyOptions} from \"../../../hooks/useHotkeyDispatch\";\nimport {useHotkeys} from \"react-hotkeys-hook\";\nimport {useTranslation} from \"react-i18next\";\nimport {InputForm} from \"../../../store/settings/types\";\n\nconst getOutput = (state: RootState) => {\n    const lastCell = state.session.document.cells.slice(-1)[0];\n    if (lastCell) {\n        return lastCell.type === \"MATH\" ? lastCell.output : lastCell.content;\n    }\n    return \"\";\n}\n\nconst selectInputForm = (inputForm: InputForm) => {\n    switch (inputForm) {\n        case \"advanced\":\n            return <AdvancedInputForm/>;\n        case \"simple\":\n            return <SimpleInputForm/>;\n        case \"document\":\n            return <DocumentInputForm/>;\n    }\n}\n\nconst Calculator: React.FC = () => {\n    const inputForm = useSelector((state: RootState) => state.settings.interfaceSettings.inputForm);\n    const [t] = useTranslation();\n    const [currentInput, currentOutput] = useSelector((state: RootState) => [state.session.currentInput, getOutput(state)]);\n    useHotkeyDispatch(clearInput, clearCurrentInput());\n    useHotkeyDispatch(clearOutput, clearMathHistory());\n    useHotkeyDispatch(clearMemory, clearMathUserScope());\n    useHotkeyDispatch(clearAll, [clearCurrentInput(), clearMathHistory(), clearMathUserScope()]);\n    useHotkeys(copyInputAndOutput, () => {\n        navigator.clipboard.writeText(`${t(\"common.input\")}: ${currentInput}\\n${t(\"common.output\")}: ${currentOutput}`).catch(console.error);\n    }, hotkeyOptions, [currentInput, currentOutput]);\n\n    return (\n        <>\n            {selectInputForm(inputForm)}\n        </>\n    );\n};\n\nexport default Calculator;","import React from \"react\";\nimport styled from \"styled-components\";\nimport {useTranslation} from \"react-i18next\";\n\nconst Container = styled.li`\n    padding: 10px 20px;\n    font-size: 28pt;\n    display: flex;\n`;\n\nconst Label = styled.label`\n    \n`;\n\nconst Select = styled.select`\n    font-size: ${props => props.theme.fontSize.m};\n    color: inherit;\n    background-color: inherit;\n    margin-left: auto;\n    min-width: 250px;\n  \n    & > option {\n      color: initial;\n      background-color: initial;\n    }\n`;\n\ninterface OptionProps {\n    label: string,\n    value: any\n}\n\ninterface Props {\n    label: string,\n    options: OptionProps[],\n    value: any,\n    setter: (value: any) => void\n}\n\nconst SettingsItem: React.FC<Props> = ({label, options, value, setter}) => {\n    const [t] = useTranslation();\n\n    const changeHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        setter(event.target.value);\n    }\n\n    return (\n        <Container>\n            <Label id={label}>{t(label)}</Label>\n            <Select value={value} onChange={changeHandler} aria-labelledby={label}>\n                {options.map((option, index) => (\n                    <option value={option.value} key={index}>{option.label}</option>\n                ))}\n            </Select>\n        </Container>\n    );\n};\n\nexport default SettingsItem;","import React from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"../../common/Card\";\nimport SettingsItem from \"./SettingsItem\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"../../../store\";\nimport {useTranslation} from \"react-i18next\";\nimport {themes} from \"../../../hooks/useTheme\";\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 20px 15%;\n    overflow-y: auto;\n`;\n\nconst SettingsCard = styled(Card)`\n  margin-bottom: 20px;\n  \n  & ul {\n    padding: 0;\n    margin: 0;\n    list-style-type: none;\n  }\n`;\n\n\nconst Settings: React.FC = () => {\n    const settings = useSelector((state: RootState) => state.settings);\n    const dispatch = useDispatch();\n    const [t] = useTranslation();\n\n    const languageOptions = [{label: \"EN\", value: \"en\"}, {label: \"DE\", value: \"de\"}];\n    const languageWithInheritOptions = [...languageOptions, {label: t(\"common.inherit\"), value: \"inherit\"}];\n    const enableOptions = [{label: t(\"common.enable\"), value: true}, {label: t(\"common.disable\"), value: false}];\n    const fontSizeOptions = [\n        {label: t(\"common.large\"), value: \"large\"},\n        {label: t(\"common.medium\"), value: \"medium\"},\n        {label: t(\"common.small\"), value: \"small\"},\n    ];\n    const inputFormOptions = [\n        {label: t(\"settings.input_form.simple\"), value: \"simple\"},\n        {label: t(\"settings.input_form.advanced\"), value: \"advanced\"},\n        {label: t(\"settings.input_form.document\"), value: \"document\"},\n    ]\n\n    const updateSettings = (updatedSettings: {interfaceSettings?: {}, mathSettings?: {}}) => {\n        dispatch({\n            type: \"SET_SETTINGS\",\n            payload: {\n                interfaceSettings: {...settings.interfaceSettings, ...updatedSettings.interfaceSettings},\n                mathSettings: {...settings.mathSettings, ...updatedSettings.mathSettings}\n            }\n        });\n    };\n\n    const updateInterfaceSettings = (updatedValues: {}) => {\n        updateSettings({interfaceSettings: updatedValues});\n    };\n\n    return (\n        <Container>\n            <SettingsCard>\n                <h1>{t(\"settings.interface\")}</h1>\n                <ul>\n                    <SettingsItem\n                        label=\"settings.language\"\n                        options={languageOptions}\n                        value={settings.interfaceSettings.language}\n                        setter={value => updateInterfaceSettings({language:  value})}\n                    />\n                    <SettingsItem\n                        label=\"settings.input_form\"\n                        options={inputFormOptions}\n                        value={settings.interfaceSettings.inputForm}\n                        setter={value => updateInterfaceSettings({inputForm: value })}\n                    />\n                    <SettingsItem\n                        label=\"settings.show_cell_numbers\"\n                        options={enableOptions}\n                        value={settings.interfaceSettings.showLineNumbers}\n                        setter={value => updateInterfaceSettings({showLineNumbers: value === \"true\"})}\n                    />\n                    <SettingsItem\n                        label=\"settings.copy_cell_content_on_click\"\n                        options={enableOptions}\n                        value={settings.interfaceSettings.copyCellContentOnClick}\n                        setter={value => updateInterfaceSettings({copyCellContentOnClick: value === \"true\"})}\n                    />\n                    <SettingsItem\n                        label=\"settings.copy_manual_content_on_click\"\n                        options={enableOptions}\n                        value={settings.interfaceSettings.copyManualContentOnClick}\n                        setter={value => updateInterfaceSettings({copyManualContentOnClick: value === \"true\"})}\n                    />\n                    <SettingsItem\n                        label=\"settings.cell_language_tag\"\n                        options={languageWithInheritOptions}\n                        value={settings.interfaceSettings.cellLanguageTag}\n                        setter={value => updateInterfaceSettings({cellLanguageTag: value})}\n                    />\n                    <SettingsItem\n                        label=\"settings.theme\"\n                        options={themes.map(theme => {return {label: theme.toUpperCase(), value: theme}})}\n                        value={settings.interfaceSettings.theme}\n                        setter={value => updateInterfaceSettings({theme: value})}\n                    />\n                    <SettingsItem\n                        label=\"settings.font_size\"\n                        options={fontSizeOptions}\n                        value={settings.interfaceSettings.fontSize}\n                        setter={value => updateInterfaceSettings({fontSize: value})}\n                    />\n                </ul>\n            </SettingsCard>\n            <SettingsCard>\n                <h1>{t(\"settings.calculator\")}</h1>\n                <ul>\n                    <SettingsItem\n                        label=\"settings.significant_decimal_places\"\n                        options={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15].map(x => {return {\n                            label: `${x}`,\n                            value: x\n                        }})}\n                        value={settings.mathSettings.significantDigits}\n                        setter={value => updateSettings({mathSettings: {significantDigits: value}})}\n                    />\n                    <SettingsItem\n                        label=\"settings.number_format\"\n                        options={languageWithInheritOptions}\n                        value={settings.mathSettings.numberFormat}\n                        setter={value => updateSettings({mathSettings: {numberFormat: value}})}\n                    />\n                </ul>\n            </SettingsCard>\n        </Container>\n    )\n}\n\nexport default Settings","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {RootState} from \"../../../store\";\nimport {changeCurrentInput} from \"../../../store/session/actions\";\n\nconst Synopsis = styled.dt<{copyable: boolean}>`\n    padding: 10px;\n    margin: 0;\n    ${props => props.copyable ? `&:hover {\n        background-color: rgba(0, 0, 0, 0.1);\n    }` : null}\n`;\n\nconst Description = styled.dd`\n    display: flex;\n    flex-direction: column;\n    align-items: start;\n    padding: 10px;\n    margin: 0;\n`;\n\ninterface Props {\n    synopsis: string,\n    synopsisIsMath?: boolean,\n    description: string,\n    copyOnClick: boolean\n}\n\nconst ManualItem: React.FC<Props> = ({synopsis, description, copyOnClick, synopsisIsMath}) => {\n    const copyManualContentOnClick = useSelector((state: RootState) => state.settings.interfaceSettings.copyManualContentOnClick);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const copyable = copyOnClick && copyManualContentOnClick;\n\n    const synopsisOnClick = () => {\n        if (copyable) {\n            dispatch(changeCurrentInput(synopsis));\n            history.push(\"/\");\n        }\n    }\n\n    const roles = [];\n    if (copyOnClick) roles.push(\"button\");\n    if (synopsisIsMath) roles.push(\"math\");\n    const role = roles.join(\" \");\n\n    return (\n        <>\n            <Synopsis\n                onClick={synopsisOnClick}\n                copyable={copyable}\n                {...(role.length > 0 ? {role: role} : {})}\n            >\n                {synopsis}\n            </Synopsis>\n            <Description>\n                {description.split(\"<br>\").map(line => <span>{line}</span>)}\n            </Description>\n        </>\n    )\n}\n\nexport default ManualItem;","export const escapeRegExp = (str: string) => str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\nexport const camelToSnakeCase = (str: string) => str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);","import React from \"react\";\nimport styled from \"styled-components\";\nimport {Language} from \"../../../store/settings/types\";\nimport Card from \"../../common/Card\";\nimport ManualItem from \"./ManualItem\";\nimport {useTranslation} from \"react-i18next\";\nimport {escapeRegExp} from \"../../../utils\";\n\nconst Container = styled(Card)`\n  margin-bottom: 20px;\n\n  & dl {\n    list-style-type: none;\n    margin: 0;\n    padding: 20px;\n    display: grid;\n    grid-template-columns: 3fr 7fr;\n    grid-column-gap: 10px;\n  }\n\n`;\n\ninterface Props {\n    title: string,\n    language: Language,\n    items: any,\n    filter: string,\n    copyOnClick?: boolean,\n    synopsisIsMath?: boolean\n}\n\nconst ManualCategory: React.FC<Props> = ({\n                                             title,\n                                             language,\n                                             items,\n                                             filter,\n                                             copyOnClick,\n                                             synopsisIsMath\n                                         }) => {\n    const [t] = useTranslation();\n\n    const filterFunction = (item: any) => item.synopsis[language].match(escapeRegExp(filter))\n        || item.description[language].match(escapeRegExp(filter));\n\n    if (items.filter(filterFunction).length === 0)\n        return null;\n\n    return (\n        <Container>\n            <h1>{t(title)}</h1>\n            <dl>\n                {\n                    items.filter(filterFunction).map((item: any, key: number) => (\n                        <ManualItem\n                            key={key}\n                            copyOnClick={!!copyOnClick}\n                            synopsisIsMath={!!synopsisIsMath}\n                            synopsis={item.synopsis[language]}\n                            description={item.description[language]}\n                        />\n                    ))\n                }\n            </dl>\n        </Container>\n    );\n};\n\nexport default ManualCategory;","import React, {useRef, useState} from \"react\";\nimport styled from \"styled-components\";\nimport ManualCategory from \"./ManualCategory\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../../../store\";\nimport InputText from \"../../common/InputText\";\nimport hotkeys from \"../../../hotkeys.json\";\n\n// @ts-ignore\nimport nd from \"@behrenle/number-drive\"\nimport {useTranslation} from \"react-i18next\";\nimport useRefEffect from \"../../../hooks/useRefEffect\";\nimport {camelToSnakeCase} from \"../../../utils\";\n\nconst Container = styled.div`\n    padding: 20px 15%;\n`;\n\nconst Manual: React.FC = () => {\n    const [filter, setFilter] = useState(\"\");\n    const language = useSelector((state: RootState) => state.settings.interfaceSettings.language);\n    const searchRef = useRef<HTMLInputElement>(null);\n    const [t] = useTranslation();\n    useRefEffect(searchRef, r => r.current.focus());\n\n    return (\n        <Container>\n            <InputText\n                type=\"text\"\n                role=\"search\"\n                aria-label={t(\"search.search_label\")}\n                style={{marginBottom: \"20px\"}}\n                placeholder={t(\"manual.search\")}\n                value={filter}\n                ref={searchRef}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => setFilter(event.target.value)}\n            />\n            <ManualCategory\n                title=\"manual.hotkeys\"\n                language={language}\n                items={\n                    Object.entries(hotkeys).map(hotkey => {\n                        const synopsis = hotkey[1].replaceAll(\"+\", \" + \").toUpperCase();\n                        const description = t(\"manual.hotkey_\" + camelToSnakeCase(hotkey[0]));\n                        return {\n                            synopsis: {de: synopsis, en: synopsis},\n                            description: {de: description, en: description}\n                        };\n                    })\n                }\n                filter={filter}\n            />\n            <ManualCategory\n                title=\"manual.constants\"\n                language={language}\n                items={nd.Manual.constants}\n                filter={filter}\n                copyOnClick={true}\n                synopsisIsMath={true}\n            />\n            <ManualCategory\n                title=\"manual.functions\"\n                language={language}\n                items={nd.Manual.functions}\n                filter={filter}\n                copyOnClick={true}\n                synopsisIsMath={true}\n            />\n        </Container>\n    )\n}\n\nexport default Manual","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst List = styled.ul`\n    padding: 20px;\n    list-style-type: none;\n    margin: 0;\n`;\n\ntype ItemValue = string | string[];\n\ntype ItemProps = [ItemValue, ItemValue];\n\ninterface ListProps {\n    items: ItemProps[]\n}\n\nconst CenteredDefinitionList: React.FC<ListProps> = ({items}) => {\n    return (\n        <List>\n            {\n                items.map(item => (\n                    <ListItem item={item}/>\n                ))\n            }\n        </List>\n    );\n};\n\nconst Item = styled.li`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 20px;\n    padding: 0.1em;\n`;\n\nconst ListItem: React.FC<{item: ItemProps}> = ({item}) => {\n    const leftValue = item[0];\n    const rightValue = item[1];\n    return (\n        <Item>\n            <ListItemContent value={leftValue} align=\"right\"/>\n            <ListItemContent value={rightValue} align=\"left\"/>\n        </Item>\n    )\n}\n\nconst Content = styled.div<{align: \"left\" | \"right\"}>`\n    display: flex;\n    flex-direction: column;\n    align-items: ${props => props.align === \"left\" ? \"flex-start\" : \"flex-end\"};\n`;\n\nconst ListItemContent: React.FC<{value: ItemValue, align: \"left\" | \"right\"}> = ({value, align}) => {\n    const lines = typeof value === \"string\" ? [value] : value;\n    return (\n        <Content align={align}>\n            {lines.map((line, index) => (\n                <span key={index}>{line}</span>\n            ))}\n        </Content>\n    )\n}\n\nexport default CenteredDefinitionList;","import React from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"../../common/Card\";\nimport CenteredDefinitionList from \"./CenteredDefinitionList\";\nimport {author, dependencies, license, version, contributors} from \"../../../../package.json\";\nimport {useTranslation} from \"react-i18next\";\n\nconst Container = styled.div`\n    padding: 20px 15%;\n`;\n\nconst Content = styled.div`\n    padding: 20px;\n`;\n\n\nconst About: React.FC = () => {\n    const [t] = useTranslation();\n\n    return (\n        <Container>\n            <Card>\n                <h1>{t(\"about.general\")}</h1>\n                <CenteredDefinitionList\n                    items={[\n                        [t(\"about.version\"), version],\n                        [t(\"about.author\"), [author.name, author.email]],\n                        [t(\"about.contributors\"), contributors.map(c => c.name)],\n                        [t(\"about.license\"), license],\n                    ]}\n                />\n            </Card>\n            <Card style={{marginTop: \"20px\"}}>\n                <h1>{t(\"about.dependencies\")}</h1>\n                <CenteredDefinitionList\n                    items={\n                        Object.entries(dependencies).map(dep => [\n                            dep[0],\n                            dep[1].charAt(0) === \"^\"\n                                ? dep[1].substring(1)\n                                : dep[1]\n                        ])\n                    }\n                />\n                <Content // todo maybe replace with trans component because html injection is unsafe\n                    dangerouslySetInnerHTML={{\n                        __html: t(\"about.more_info\", {url: \"https://www.npmjs.com/\", label: \"npmjs.com\"})\n                    }}\n                />\n            </Card>\n        </Container>\n    )\n}\n\nexport default About","import Calculator from \"../views/calculator/Calculator\";\nimport Settings from \"../views/settings/Settings\";\nimport Manual from \"../views/manual/Manual\";\nimport About from \"../views/about/About\";\n\nexport const routes = [\n    {name: \"navbar.calculator\", path: \"/\", render: () => <Calculator/>},\n    {name: \"navbar.settings\", path: \"/settings\", render: () => <Settings/>},\n    {name: \"navbar.manual\", path: \"/manual\", render: () => <Manual/>},\n    {name: \"navbar.about\", path: \"/about\", render: () => <About/>}\n];\n\nexport const navbarProps = {\n    title: `Math Explorer`,\n    items: routes.map(view => {\n        return {name: view.name, path: view.path}\n    })\n};","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport \"../../i18n/index\";\nimport styled, {ThemeProvider} from \"styled-components\";\nimport Navbar from \"./navbar/Navbar\";\nimport useTheme from \"../../hooks/useTheme\";\nimport GlobalStyle from \"./GlobalStyle\";\nimport {routes, navbarProps} from \"./appConfig\";\n\nconst Content = styled.main`\n  z-index: 0;\n  overflow-y: auto;\n`;\n\nconst App: React.FC = () => {\n    const theme = useTheme();\n\n    return (\n        <ThemeProvider theme={theme}>\n            <GlobalStyle/>\n            <>\n                <Navbar {...navbarProps}/>\n                <Content>\n                    <Switch>\n                        {routes.map((route, i) => (\n                            <Route\n                                key={i}\n                                exact path={route.path}\n                                render={route.render}\n                            />\n                        ))}\n                    </Switch>\n                </Content>\n            </>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","import {Settings} from \"./types\";\n\nconst defaultSettings: Settings = {\n    mathSettings: {\n        numberFormat: \"inherit\",\n        significantDigits: 6\n    },\n    interfaceSettings: {\n        cellLanguageTag: \"inherit\",\n        language: \"de\",\n        inputForm: \"simple\",\n        copyManualContentOnClick: true,\n        copyCellContentOnClick: true,\n        showLineNumbers: true,\n        theme: \"light\",\n        fontSize: \"normal\"\n    }\n};\n\nconst localStorageSettingsKey = \"settings\";\n\nexport const loadSettings = (): Settings => {\n    const settingsData = localStorage.getItem(localStorageSettingsKey);\n    const settings = settingsData !== undefined && settingsData !== null\n        ? JSON.parse(settingsData)\n        : {};\n\n    return {...defaultSettings, ...settings};\n};\n\nexport const saveSettings = (settings: Settings) => {\n    localStorage.removeItem(localStorageSettingsKey); // kind of unnecessary lol\n    localStorage.setItem(localStorageSettingsKey, JSON.stringify(settings));\n    return settings;\n};\n\n","import {Settings, SettingsAction} from \"./types\";\nimport {loadSettings, saveSettings} from \"./settingsUtils\";\nimport i18n from \"../../i18n/index\";\n\nconst initialState = loadSettings();\n\n/* todo use redux-create-reducer package */\nconst settingsReducer = (state = initialState, action: SettingsAction): Settings => {\n    switch (action.type) {\n        case \"SET_SETTINGS\":\n            // @ts-ignore\n            document.getElementsByTagName(\"html\").item(0).lang = action.payload.interfaceSettings.language;\n            i18n.changeLanguage(action.payload.interfaceSettings.language).catch(console.error);\n            return saveSettings(action.payload);\n\n        case \"SET_INTERFACE_SETTINGS\":\n            return settingsReducer(state, {\n                type: \"SET_SETTINGS\",\n                payload: {...state, interfaceSettings: action.payload}\n            });\n\n        case \"SET_MATH_SETTINGS\":\n            return settingsReducer(state, {\n                type: \"SET_SETTINGS\",\n                payload: {...state, mathSettings: action.payload}\n            });\n\n        default:\n            i18n.changeLanguage(state.interfaceSettings.language).catch(console.error)\n            return state;\n    }\n};\n\nexport default settingsReducer;","import {Cell, MathCell, PushMathCell, Session, SessionAction} from \"./types\";\nimport {createReducer} from \"redux-create-reducer\";\n// todo ts declaration file for number-drive or write ts version of numberdrive\n// @ts-ignore\nimport numberdrive from \"@behrenle/number-drive\";\nimport {Language, SignificantDigits} from \"../settings/types\";\n\nconst script = new numberdrive.Script(\"en\",);\nconst defaultState: Session = {\n    currentInput: \"\",\n    selectedCell: -1,\n    editCell: false,\n    document: {\n        title: \"\",\n        cells: []\n    }\n};\n\nconst evaluateInput = (input: string, lang: Language, sigDigits: SignificantDigits): string => {\n    if (input.length > 0) {\n        script.evaluate(input, lang, parseInt(sigDigits + \"\"));\n        const output = script.getItems().slice(-1)[0].output;\n        return output ? output : \"\";\n    }\n    return \"\";\n}\n\nconst clearScope = () => {\n    script.clearUserScope();\n};\n\nconst sessionReducer = createReducer<Session, SessionAction>(defaultState, {\n    CHANGE_CURRENT_INPUT: (state, action) => ({...state, currentInput: action.payload}),\n\n    CLEAR_CURRENT_INPUT: (state) => ({...state, currentInput: \"\"}),\n\n    CLEAR_DOCUMENT_CELLS: (state) => ({...state, document: defaultState.document}),\n\n    CLEAR_MATH_USER_SCOPE: (state) => {\n        clearScope();\n        return state;\n    },\n\n    PUSH_MATH_CELL: (state, action: PushMathCell) => {\n        if (action.payload.content.length > 0) {\n            const nextState = {...state};\n            nextState.document.cells = nextState.document.cells.concat([{\n                type: \"MATH\",\n                input: action.payload.content,\n                output: evaluateInput(action.payload.content, action.payload.language, action.payload.significantDigits)\n            }]);\n            return nextState;\n        }\n        return {\n            ...state, document: {\n                ...state.document, cells: state.document.cells.concat([{\n                    type: \"MATH\",\n                    input: \"\",\n                    output: \"\",\n                }])\n            }\n        }\n    },\n\n    PUSH_TEXT_CELL: (state, action) => {\n        const nextState = {...state};\n        nextState.document.cells = nextState.document.cells.concat([{\n            type: \"TEXT\",\n            content: action.payload\n        }]);\n        return nextState;\n    },\n\n    UPDATE_MATH_CELL: (state, action) => {\n        const selectedCell = state.document.cells[action.payload.index];\n        if (selectedCell) {\n            const updatedCell: MathCell = {\n                type: \"MATH\",\n                input: action.payload.input,\n                output: evaluateInput(\n                    action.payload.input,\n                    action.payload.language,\n                    action.payload.significantDigits\n                )\n            };\n            const nextState = {...state};\n            if (action.payload.input.length > 0) {\n                nextState.document.cells[action.payload.index] = updatedCell;\n            } else {\n                nextState.document.cells = nextState.document.cells\n                    .filter((_, i) => i !== action.payload.index);\n            }\n            return nextState;\n        }\n        return state;\n    },\n\n    SELECT_CELL: (state, action) => ({...state, selectedCell: action.payload}),\n\n    SET_EDIT_CELL: (state, action) => {\n        const nextState = {...state};\n        nextState.editCell = action.payload;\n        return nextState;\n    },\n\n    UPDATE_TEXT_CELL: (state, action) => {\n        const nextState = {...state};\n        if (action.payload.content.length > 0) {\n            nextState.document.cells[action.payload.index] = {\n                type: \"TEXT\",\n                content: action.payload.content\n            };\n        } else {\n            nextState.document.cells = nextState.document.cells\n                .filter((_, i) => i !== action.payload.index);\n        }\n        return nextState;\n    },\n\n    REFRESH_MATH_CELLS: (state, action) => {\n        clearScope();\n        const updatedCells = state.document.cells.map((cell: Cell): Cell => cell.type === \"MATH\"\n            ? {\n                type: \"MATH\", input: cell.input, output: evaluateInput(\n                    cell.input, action.payload.language, action.payload.significantDigits\n                )\n            } : cell);\n        const nextState = {...state};\n        nextState.document.cells = updatedCells;\n        return nextState;\n    },\n\n    DELETE_CELL: (state, action) => {\n        const nextState = {...state};\n        nextState.document.cells = state.document.cells.filter((_, i) => i !== action.payload);\n        return nextState;\n    },\n\n    LOAD_DOCUMENT: (state, action) => {\n        return {...state, document: action.payload};\n    }\n});\n\nexport default sessionReducer;","import {combineReducers} from \"redux\";\nimport settingsReducer from \"./settings/reducers\";\nimport sessionReducer from \"./session/reducers\";\n\nexport const rootReducer = combineReducers({\n    settings: settingsReducer,\n    session: sessionReducer\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import React from \"react\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport App from \"./App\";\nimport initStore from \"../../store/createStore\";\n\nconst store = initStore();\n\nconst AppWrapper: React.FC = () => {\n    return (\n        <Provider store={store}>\n            <HashRouter>\n                <App/>\n            </HashRouter>\n        </Provider>\n    )\n}\n\nexport default AppWrapper","import {createStore} from \"redux\";\nimport {rootReducer} from \"./index\";\n\nconst initStore = () => createStore(rootReducer);\nexport default initStore;","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register() {\n    if (\"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL!,\n            window.location.toString(),\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://goo.gl/SC7cgQ\",\n                    );\n                });\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string) {\n    navigator.serviceWorker\n        .register(swUrl, {scope: \".\"})\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === \"installed\") {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log(\"New content is available; please refresh.\");\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log(\"Content is cached for offline use.\");\n                            }\n                        }\n                    };\n                }\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().catch(console.error);\n        });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppWrapper from \"./components/app/AppWrapper\";\nimport {register as registerServiceWorker} from \"./serviceWorker\";\nimport \"./googlefonts.css\";\n\nregisterServiceWorker();\nReactDOM.render(\n    <AppWrapper/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}