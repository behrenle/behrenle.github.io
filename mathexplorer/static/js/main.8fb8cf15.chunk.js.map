{"version":3,"sources":["i18n/index.ts","components/app/navbar/NavbarItem.tsx","themes/light.ts","themes/dark.ts","hooks/useTheme.tsx","components/app/navbar/Navbar.tsx","components/common/Sidebar.tsx","store/session/actions.ts","components/views/calculator/CalculatorSidebar.tsx","components/common/InputText.tsx","components/views/calculator/InputField.tsx","hooks/useHotkeyDispatch.tsx","hooks/useHotkeyRef.tsx","hooks/useRefEffect.tsx","components/views/calculator/SimpleInputForm.tsx","components/common/Card.tsx","components/views/calculator/AdvancedInputForm.tsx","components/views/calculator/Calculator.tsx","components/views/settings/SettingsItem.tsx","components/views/settings/Settings.tsx","components/views/manual/ManualItem.tsx","utils.ts","components/views/manual/ManualCategory.tsx","components/views/manual/Manual.tsx","components/views/about/CenteredDefinitionList.tsx","components/views/about/About.tsx","components/app/App.tsx","store/settings/settingsUtils.ts","store/settings/reducers.ts","store/session/reducers.ts","store/index.ts","components/app/AppWrapper.tsx","store/createStore.ts","serviceWorker.ts","index.tsx"],"names":["resources","en","translation","de","i18n","use","initReactI18next","init","lng","fallbackLng","keySeparator","interpolation","escapeValue","catch","console","log","StyledLink","styled","Link","props","enabled","NavbarItem","name","path","location","useLocation","useState","active","setActive","useEffect","pathname","useTranslation","t","to","toString","lightTheme","app","backgroundColor","backgroundImage","navbar","color","navbarItem","hoverBackgroundColor","card","cardHeading","sidebar","sidebarItem","inputText","outline","darkTheme","themes","useTheme","useSelector","state","settings","interfaceSettings","theme","Container","header","NavContainer","nav","Logo","img","Title","span","Navbar","title","items","src","process","alt","map","item","index","aside","Sidebar","children","changeCurrentInput","input","type","payload","CalculatorSidebar","dispatch","useDispatch","advancedInputMode","onClick","InputText","InputField","React","forwardRef","forwardedRef","value","session","currentInput","interfaceLanguage","language","mathLanguage","mathSettings","numberFormat","significantDigits","ref","placeholder","onChange","event","target","onKeyPress","key","evaluate","hotkeyOptions","filter","useHotkeyDispatch","hotkey","action","dispatchAction","setDispatchAction","useHotkeys","Array","forEach","a","useHotkeyRef","effect","current","useRefEffect","deps","div","StyledOutputField","SimpleInputForm","lastOutput","mathHistory","length","output","outputRef","useRef","inputRef","r","focus","select","focusInput","focusOutput","readOnly","Card","MathHistoryContainer","MathHistoryContainerWrapper","MathHistoryItemContainer","showCellNumbers","MathHistoryItemLineCounter","MathHistoryItemLabel","MathHistoryItemValue","copyable","MathHistoryItem","copyOnClick","copyCellContentOnClick","showLineNumbers","cellLanguageTag","languageTag","lang","MathHistory","containerRef","scrollTop","scrollHeight","AdvancedInputForm","i","Calculator","currentOutput","clearInput","clearOutput","clearMemory","clearAll","copyInputAndOutput","navigator","clipboard","writeText","error","selectedInputForm","Label","label","Select","SettingsItem","options","setter","option","SettingsCard","Settings","languageOptions","languageWithInheritOptions","enableOptions","updateSettings","updatedSettings","copyManualContentOnClick","toUpperCase","x","Synopsis","Description","ManualItem","synopsis","description","history","useHistory","push","escapeRegExp","str","replace","ManualCategory","filterFunction","match","Manual","setFilter","searchRef","style","marginBottom","Object","entries","hotkeys","replaceAll","letter","toLowerCase","nd","constants","functions","Item","LeftItem","RightItem","StyledSpan","CenteredDefinitionListItem","v","CenteredDefinitionList","Content","views","component","version","author","email","license","marginTop","dependencies","flatMap","charAt","substring","dangerouslySetInnerHTML","__html","url","navbarProps","view","main","App","exact","defaultSettings","localStorageSettingsKey","saveSettings","localStorage","removeItem","setItem","JSON","stringify","initialState","settingsData","getItem","undefined","parse","loadSettings","settingsReducer","changeLanguage","script","numberdrive","Script","sessionReducer","parseInt","scriptItems","getItems","concat","slice","clearUserScope","rootReducer","combineReducers","store","createStore","initStore","AppWrapper","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","serviceWorker","register","scope","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fb8cf15.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport enLangData from \"./translations/en.json\";\nimport deLangData from \"./translations/de.json\"\n\nconst resources = {\n    en: {translation: enLangData},\n    de: {translation: deLangData}\n};\n\ni18n\n    .use(initReactI18next)\n    .init({\n        resources,\n        lng: \"en\",\n        fallbackLng: \"en\",\n        keySeparator: false,\n        interpolation: {\n            escapeValue: false\n        }\n    }).catch(console.log);\n\n\nexport default i18n;\n","import React, {useEffect, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {Link} from \"react-router-dom\";\nimport {useLocation} from \"react-router-dom\";\nimport {useTranslation} from \"react-i18next\";\n\nconst StyledLink = styled(Link)`\n    padding: 0 20px;\n    color: white;\n    text-decoration: none;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    ${\n        (props: {enabled: string}) => props.enabled === \"true\"\n            ? `border-bottom: 4px solid white; padding-top: 4px;` : null\n    }\n    &:hover {\n        background-color: rgba(255, 255, 255, 0.2);\n    }\n    \n    &:focus {\n        outline: 2px solid white;\n    }\n`;\n\ninterface Props {\n    name: string,\n    path: string\n}\n\nconst NavbarItem: React.FC<Props> = ({name, path}) => {\n    const location = useLocation();\n    const [active, setActive] = useState(false);\n    useEffect(() => {\n        setActive(location.pathname === path)\n    }, [location, path]);\n    const [t] = useTranslation();\n\n    return (\n        <StyledLink to={path} enabled={active.toString()}>{t(name)}</StyledLink>\n    )\n}\n\nexport default NavbarItem","import {Theme} from \"../hooks/useTheme\";\n\nconst lightTheme: Theme = {\n  app: {\n    backgroundColor: \"white\",\n    backgroundImage: \"/background.png\"\n  },\n  navbar: {\n    backgroundColor: \"#1D3971\",\n    color: \"white\"\n  },\n  navbarItem: {\n    hoverBackgroundColor: \"rgba(255, 255, 255, 0.2)\"\n  },\n  card: {\n    backgroundColor: \"white\",\n    color: \"black\"\n  },\n  cardHeading: {\n    backgroundColor: \"rgba(0, 0, 0, 0.08)\"\n  },\n  sidebar: {\n    backgroundColor: \"white\",\n    color: \"black\"\n  },\n  sidebarItem: {\n    hoverBackgroundColor: \"rgba(0, 0, 0, 0.2)\"\n  },\n  inputText: {\n    backgroundColor: \"white\",\n    outline: \"2px solid black\",\n    color: \"black\"\n  }\n};\n\nexport default lightTheme;","import {Theme} from \"../hooks/useTheme\";\n\nconst darkTheme: Theme = {\n  app: {\n    backgroundColor: \"#171717\",\n    backgroundImage: \"\"\n  },\n  navbar: {\n    backgroundColor: \"#060606\",\n    color: \"white\"\n  },\n  navbarItem: {\n    hoverBackgroundColor: \"rgba(255, 255, 255, 0.2)\"\n  },\n  card: {\n    backgroundColor: \"#2b2b2b\",\n    color: \"#d6d6d6\"\n  },\n  cardHeading: {\n    backgroundColor: \"rgba(0, 0, 0, 0.08)\"\n  },\n  sidebar: {\n    backgroundColor: \"#2b2b2b\",\n    color: \"white\"\n  },\n  sidebarItem: {\n    hoverBackgroundColor: \"rgba(255, 255, 255, 0.2)\"\n  },\n  inputText: {\n    backgroundColor: \"#2b2b2b\",\n    outline: \"2px solid white\",\n    color: \"white\"\n  }\n};\n\nexport default darkTheme;","import lightTheme from \"../themes/light\";\nimport darkTheme from \"../themes/dark\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../store\";\n\nexport type ThemeName = \"light\" | \"dark\";\nexport const themes = [\"light\", \"dark\"];\n\nexport interface Theme {\n    app: {\n        backgroundColor: string,\n        backgroundImage: string\n    },\n    navbar: {\n        backgroundColor: string,\n        color: string\n    },\n    navbarItem: {\n        hoverBackgroundColor: string\n    },\n    card: {\n        backgroundColor: string,\n        color: string\n    },\n    cardHeading: {\n        backgroundColor: string\n    },\n    sidebar: {\n        backgroundColor: string,\n        color: string\n    },\n    sidebarItem: {\n        hoverBackgroundColor: string\n    },\n    inputText: {\n        backgroundColor: string,\n        outline: string,\n        color: string\n    }\n}\n\nconst useTheme = (): Theme => {\n    const theme = useSelector((state: RootState) => state.settings.interfaceSettings.theme);\n    switch (theme) {\n        case \"light\":\n            return lightTheme;\n\n        case \"dark\":\n            return darkTheme;\n\n        default:\n            return lightTheme;\n    }\n}\n\nexport default useTheme;","import React from \"react\";\nimport styled from \"styled-components\";\nimport NavbarItem from \"./NavbarItem\";\nimport useTheme, {Theme} from \"../../../hooks/useTheme\";\n\nconst Container = styled.header<Theme>`\n    display: flex;\n    font-size: 36pt;\n    background-color: ${props => props.navbar.backgroundColor};\n    color: white;\n    height: 80px;\n    align-items: center;\n    box-shadow: 0 5px 5px rgba(0, 0, 0, 0.20);\n    z-index: 1;\n`;\n\nconst NavContainer = styled.nav`\n    display: flex;\n    height: 80px;\n`;\n\nconst Logo = styled.img`\n    width: 80px;\n    height: 80px;\n    padding: 10px;\n`;\n\nconst Title = styled.span`\n    margin-right: auto;\n    padding: 10px;\n`;\n\ninterface PropsItem {\n    name: string,\n    path: string\n}\n\ninterface Props {\n    title: string,\n    items: PropsItem[]\n}\n\nconst Navbar: React.FC<Props> = ({title, items}) => {\n    const theme = useTheme();\n\n    return (\n        <Container {...theme}>\n            <Logo src={process.env.PUBLIC_URL + \"/logo.png\"} alt=\"logo\"/>\n            <Title>{title}</Title>\n            <NavContainer>\n                {items.map((item, index) => <NavbarItem key={index} name={item.name} path={item.path}/>)}\n            </NavContainer>\n        </Container>\n    );\n}\n\nexport default Navbar;","import React from \"react\";\nimport styled from \"styled-components\";\nimport useTheme, {Theme} from \"../../hooks/useTheme\";\n\nconst Container = styled.aside<Theme>`\n    background-color: ${props => props.sidebar.backgroundColor};\n    color: ${props => props.sidebar.color};\n    box-shadow: 5px 0 5px rgba(0, 0, 0, 0.15);\n    display: flex;\n    flex-direction: column;\n    \n    & button {\n        background: none;\n        border: none;\n        outline: none;\n        font-size: 28pt;\n        padding: 20px;\n        text-align: left;\n        color: inherit;\n    }\n    \n    & button:hover {\n        background-color: ${props => props.sidebarItem.hoverBackgroundColor};\n        font-weight: 400;\n    }\n    \n    & button:disabled:hover {\n        background: none;\n        font-weight: 300;\n    }\n    \n    & button:focus {\n        border: 2px solid black;\n        padding: 18px;\n    }\n`;\n\nconst Sidebar: React.FC<{}> = ({children}) => {\n    const theme = useTheme();\n\n    return (\n        <Container {...theme}>\n            {children}\n        </Container>\n    )\n};\n\nexport default Sidebar;","import {SessionAction} from \"./types\";\nimport {Language, SignificantDigits} from \"../settings/types\";\n\nexport const changeCurrentInput = (input: string): SessionAction => {\n    return {\n        type: \"CHANGE_CURRENT_INPUT\",\n        payload: input\n    };\n};\n\nexport const clearCurrentInput = (): SessionAction => {\n    return {\n        type: \"CLEAR_CURRENT_INPUT\"\n    };\n};\n\nexport const evaluate = (language: Language, significantDigits: SignificantDigits): SessionAction => {\n    return {\n        type: \"EVALUATE_INPUT\",\n        payload: {\n            language,\n            significantDigits\n        }\n    };\n};\n\nexport const clearMathHistory = (): SessionAction => {\n    return {\n        type: \"CLEAR_MATH_HISTORY\"\n    };\n};\n\nexport const clearMathUserScope = (): SessionAction => {\n    return {\n        type: \"CLEAR_MATH_USER_SCOPE\"\n    };\n};","import React from \"react\";\nimport Sidebar from \"../../common/Sidebar\";\nimport {useTranslation} from \"react-i18next\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {clearCurrentInput, clearMathHistory, clearMathUserScope} from \"../../../store/session/actions\";\nimport {RootState} from \"../../../store\";\n\nconst CalculatorSidebar: React.FC = () => {\n    const dispatch = useDispatch();\n    const [t] = useTranslation();\n    const advancedInputMode = useSelector((state: RootState) => state.settings.interfaceSettings.advancedInputMode);\n\n    const clearAll = () => {\n        dispatch(clearMathHistory());\n        dispatch(clearCurrentInput());\n        dispatch(clearMathUserScope());\n    };\n\n    return (\n        <Sidebar>\n            <button onClick={() => dispatch(clearMathHistory())}>\n                {t(advancedInputMode ? \"calculator.clear_history\" : \"calculator.clear_output\")}\n            </button>\n            <button onClick={() => dispatch(clearCurrentInput())}>\n                {t(\"calculator.clear_input\")}\n            </button>\n            <button onClick={() => dispatch(clearMathUserScope())}>\n                {t(\"calculator.clear_memory\")}\n            </button>\n            <button onClick={clearAll}>\n                {t(\"calculator.clear_all\")}\n            </button>\n            {/*<button disabled={true} style={{marginTop:\"auto\"}}>New Document</button>\n            <button disabled={true}>Save Document</button>\n            <button disabled={true}>Load Document</button>*/}\n        </Sidebar>\n    );\n}\n\nexport default CalculatorSidebar;","import styled from \"styled-components\";\nimport {Theme} from \"../../hooks/useTheme\";\n\nconst InputText = styled.input<Theme>`\n    width: 100%;\n    padding: 20px;\n    border: none;\n    box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.1);\n    background-color: ${props => props.inputText.backgroundColor};\n    color: ${props => props.inputText.color};\n    \n    &:focus {\n        outline: ${props => props.inputText.outline};\n    }\n`;\n\nexport default InputText;","import React from \"react\";\nimport InputText from \"../../common/InputText\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changeCurrentInput, evaluate} from \"../../../store/session/actions\";\nimport {RootState} from \"../../../store\";\nimport {useTranslation} from \"react-i18next\";\nimport useTheme from \"../../../hooks/useTheme\";\n\nconst InputField = React.forwardRef((props, forwardedRef) => {\n    const dispatch = useDispatch();\n    const value = useSelector((state: RootState) => state.session.currentInput);\n    const interfaceLanguage = useSelector((state: RootState) => state.settings.interfaceSettings.language);\n    const mathLanguage = useSelector((state: RootState) => state.settings.mathSettings.numberFormat);\n    const significantDigits = useSelector((state: RootState) => state.settings.mathSettings.significantDigits);\n    const [t] = useTranslation();\n    const theme = useTheme();\n\n    const changeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(changeCurrentInput(event.target.value));\n    };\n\n    const keypressInput = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === \"Enter\")\n            dispatch(evaluate(\n                mathLanguage === \"inherit\" ? interfaceLanguage : mathLanguage,\n                significantDigits\n            ));\n    }\n\n    // @ts-ignore\n    return (<InputText ref={forwardedRef}\n        type=\"text\"\n        {...theme}\n        placeholder={t(\"common.input\")}\n        onChange={changeInput}\n        onKeyPress={keypressInput}\n        value={value}\n    />);\n});\n\nexport default InputField;","import {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {useHotkeys} from \"react-hotkeys-hook\";\n\nconst hotkeyFilter = () => true;\nexport const hotkeyOptions = {filter: hotkeyFilter};\n\ninterface Action {\n    type: string,\n}\n\nconst useHotkeyDispatch = (hotkey: string, action: Action | Action[]) => {\n    const dispatch = useDispatch()\n    const [dispatchAction, setDispatchAction] = useState(false);\n    useHotkeys(hotkey, () => setDispatchAction(true), hotkeyOptions, []);\n\n    if (dispatchAction) {\n        if (action instanceof Array) {\n            action.forEach(a => dispatch(a));\n        } else {\n            dispatch(action);\n        }\n        setDispatchAction(false);\n    }\n}\n\nexport default useHotkeyDispatch;","import React from \"react\";\nimport {useHotkeys} from \"react-hotkeys-hook\";\nimport {hotkeyOptions} from \"./useHotkeyDispatch\";\n\nconst useHotkeyRef = (hotkey: string, ref: React.RefObject<any>, effect: (ref: React.RefObject<any>) => void) => {\n    useHotkeys(hotkey, () => {\n        if (ref.current)\n            effect(ref);\n    }, hotkeyOptions, []);\n};\n\nexport default useHotkeyRef;","import React, {useEffect} from \"react\";\n\nconst useRefEffect = (ref: React.RefObject<any>, effect: (ref: React.RefObject<any>) => void, deps: any[] = []) => {\n    useEffect(() => {\n        if (ref.current)\n            effect(ref);\n    }, deps);\n}\n\nexport default useRefEffect;","import React, {useRef} from \"react\";\nimport styled from \"styled-components\";\nimport {RootState} from \"../../../store\";\nimport {useSelector} from \"react-redux\";\nimport InputText from \"../../common/InputText\";\nimport InputField from \"./InputField\";\nimport {useTranslation} from \"react-i18next\";\nimport {focusInput, focusOutput} from \"../../../hotkeys.json\";\nimport useHotkeyRef from \"../../../hooks/useHotkeyRef\";\nimport useRefEffect from \"../../../hooks/useRefEffect\";\nimport useTheme from \"../../../hooks/useTheme\";\n\nconst Container = styled.div`\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst StyledOutputField = styled(InputText)`\n    margin-top: 20px;\n`;\n\nconst SimpleInputForm: React.FC = () => {\n    const lastOutput: string = useSelector((state: RootState) => state.session.mathHistory.length < 1\n        ? \"\" : state.session.mathHistory[state.session.mathHistory.length - 1].output\n    );\n    const outputRef = useRef<HTMLInputElement>(null);\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [t] = useTranslation();\n    useRefEffect(outputRef, r => {r.current.focus(); r.current.select()}, [lastOutput]);\n    useRefEffect(inputRef, r => r.current.focus());\n    useHotkeyRef(focusInput, inputRef, (r) => r.current.focus());\n    useHotkeyRef(focusOutput, outputRef, (r) => r.current.focus());\n    const theme = useTheme();\n\n    const outputOnKeyPress = (event: React.KeyboardEvent) => {\n        if (event.key === \"Enter\" && inputRef.current)\n            inputRef.current.focus();\n    }\n\n\n    return (\n        <Container>\n            <InputField ref={inputRef} />\n            <StyledOutputField\n                type=\"text\"\n                {...theme}\n                readOnly={true}\n                placeholder={t(\"common.output\")}\n                value={lastOutput}\n                ref={outputRef}\n                onKeyPress={outputOnKeyPress}\n            />\n        </Container>\n    )\n}\n\nexport default SimpleInputForm;","import styled from \"styled-components\";\nimport {Theme} from \"../../hooks/useTheme\";\n\nconst Card = styled.div<Theme>`\n    color: ${props => props.card.color};    \n    background-color: ${props => props.card.backgroundColor};\n    box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.1);\n    \n    & h1 {\n        font-size: 36pt;\n        background-color: rgba(0, 0, 0, 0.08);\n        margin: 0;\n        padding: 10px 20px;\n    }\n`;\n\nexport default Card;","import React, {useEffect, useRef} from \"react\";\nimport styled from \"styled-components\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"../../../store\";\nimport InputField from \"./InputField\";\nimport Card from \"../../common/Card\";\nimport {useTranslation} from \"react-i18next\";\nimport {useHotkeys} from \"react-hotkeys-hook\";\nimport {focusInput} from \"../../../hotkeys.json\";\nimport {changeCurrentInput} from \"../../../store/session/actions\";\nimport useRefEffect from \"../../../hooks/useRefEffect\";\nimport useTheme from \"../../../hooks/useTheme\";\n\nconst Container = styled.div`\n    padding: 20px;\n    display: grid;\n    overflow: hidden;\n    grid-template-rows: 1fr auto;\n    grid-gap: 20px;\n`;\n\nconst MathHistoryContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n`;\n\nconst MathHistoryContainerWrapper = styled(Card)`\n    overflow-y: auto;\n    -ms-overflow-style: none;\n    \n    &::-webkit-scrollbar {\n        display: none;\n    }\n`;\n\nconst MathHistoryItemContainer = styled.div<{showCellNumbers: boolean}>`\n    display: grid;\n    grid-template-columns: ${ props => props.showCellNumbers ? \"80px auto 1fr\" : \"auto 1fr\" };\n    grid-template-rows: auto auto;\n    padding: 10px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.25);\n`;\n\nconst MathHistoryItemLineCounter = styled.div`\n    grid-row: span 2;\n    opacity: 0.4;\n    user-select: none;\n    padding: 10px\n`;\n\nconst MathHistoryItemLabel = styled.div`\n    text-align: right;\n    font-weight: 300;\n    font-size: 20pt;\n    align-self: center;\n    padding: 0 10px;\n`;\n\nconst MathHistoryItemValue = styled.span<{copyable: boolean}>`\n    padding: 10px;\n    ${\n        props => props.copyable ? \"&:hover { background-color: rgba(0, 0, 0, 0.1); }\" : null\n    }\n`;\n\ninterface MathHistoryItemProps {\n    index: number,\n    input: string,\n    output: string\n}\n\nconst MathHistoryItem: React.FC<MathHistoryItemProps> = ({index,input, output}) => {\n    const [t] = useTranslation();\n    const copyOnClick = useSelector((state: RootState) => state.settings.interfaceSettings.copyCellContentOnClick);\n    const showCellNumbers = useSelector((state: RootState) => state.settings.interfaceSettings.showLineNumbers);\n    const language = useSelector((state: RootState) => state.settings.interfaceSettings.language);\n    const cellLanguageTag = useSelector((state: RootState) => state.settings.interfaceSettings.cellLanguageTag);\n    const dispatch = useDispatch();\n\n    const languageTag = cellLanguageTag === \"inherit\" ? language : cellLanguageTag;\n\n    const onClick = (type: \"input\" | \"output\") => {\n        if (copyOnClick)\n            dispatch(changeCurrentInput(type === \"input\"\n                ? input\n                : output\n            ));\n    };\n\n    return (\n        <MathHistoryItemContainer showCellNumbers={showCellNumbers}>\n            { showCellNumbers ? <MathHistoryItemLineCounter>#{index + 1}</MathHistoryItemLineCounter> : null }\n            <MathHistoryItemLabel>{t(\"common.input\")}</MathHistoryItemLabel>\n            <MathHistoryItemValue\n                lang={languageTag}\n                copyable={copyOnClick}\n                onClick={() => onClick(\"input\")}\n            > {input}</MathHistoryItemValue>\n            <MathHistoryItemLabel>{t(\"common.output\")}</MathHistoryItemLabel>\n            <MathHistoryItemValue\n                lang={languageTag}\n                copyable={copyOnClick}\n                onClick={() => onClick(\"output\")}\n            > {output}</MathHistoryItemValue>\n        </MathHistoryItemContainer>\n    );\n}\n\nconst MathHistory: React.FC<{ items: MathHistoryItemProps[] }> = ({items}) => {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const theme = useTheme();\n\n    useEffect(() => {\n        if (containerRef.current)\n            containerRef.current.scrollTop = containerRef.current.scrollHeight;\n    }, [items])\n\n    return (\n        <MathHistoryContainerWrapper ref={containerRef} {...theme}>\n            <MathHistoryContainer>\n                {\n                    items.map(item => <MathHistoryItem\n                        key={item.index}\n                        index={item.index}\n                        input={item.input}\n                        output={item.output}\n                    />)\n                }\n            </MathHistoryContainer>\n        </MathHistoryContainerWrapper>\n    )\n}\n\nconst AdvancedInputForm: React.FC = () => {\n    const mathHistory = useSelector((state: RootState) => state.session.mathHistory);\n    const inputRef = useRef<HTMLInputElement>(null);\n    useHotkeys(focusInput, () => {\n        if (inputRef.current)\n            inputRef.current.focus();\n    }, {filter: () => true}, []);\n    useRefEffect(inputRef, (r) => r.current.focus(), []);\n\n    return (\n        <Container>\n            <MathHistory items={mathHistory.map((item, i) => {return {...item, index: i}})}/>\n            <InputField ref={inputRef}/>\n        </Container>\n    )\n}\n\nexport default AdvancedInputForm;","import React from \"react\";\nimport styled from \"styled-components\";\nimport CalculatorSidebar from \"./CalculatorSidebar\";\nimport SimpleInputForm from \"./SimpleInputForm\";\nimport AdvancedInputForm from \"./AdvancedInputForm\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../../../store\";\nimport {clearAll, clearInput, clearMemory, clearOutput, copyInputAndOutput} from \"../../../hotkeys.json\";\nimport {clearCurrentInput, clearMathHistory, clearMathUserScope} from \"../../../store/session/actions\";\nimport useHotkeyDispatch, {hotkeyOptions} from \"../../../hooks/useHotkeyDispatch\";\nimport {useHotkeys} from \"react-hotkeys-hook\";\nimport {useTranslation} from \"react-i18next\";\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 350px auto;\n    height: 100%;\n`;\n\nconst Calculator: React.FC = () => {\n    const advancedInputMode = useSelector((state: RootState) => state.settings.interfaceSettings.advancedInputMode);\n    const [t] = useTranslation();\n    const [currentInput, currentOutput] = useSelector((state: RootState) => [state.session.currentInput, state.session.mathHistory[state.session.mathHistory.length - 1]?.output || \"\"]);\n    useHotkeyDispatch(clearInput, clearCurrentInput());\n    useHotkeyDispatch(clearOutput, clearMathHistory());\n    useHotkeyDispatch(clearMemory, clearMathUserScope());\n    useHotkeyDispatch(clearAll, [clearCurrentInput(), clearMathHistory(), clearMathUserScope()]);\n    useHotkeys(copyInputAndOutput, () => {\n        navigator.clipboard.writeText(`${t(\"common.input\")}: ${currentInput}\\n${t(\"common.output\")}: ${currentOutput}`).catch(console.error);\n    }, hotkeyOptions, [currentInput, currentOutput]);\n\n    const selectedInputForm = advancedInputMode ? <AdvancedInputForm/> : <SimpleInputForm/>;\n\n    return (\n        <Container>\n            <CalculatorSidebar/>\n            {selectedInputForm}\n        </Container>\n    )\n}\n\nexport default Calculator","import React from \"react\";\nimport styled from \"styled-components\";\nimport {useTranslation} from \"react-i18next\";\n\nconst Container = styled.div`\n    padding: 10px 20px;\n    font-size: 28pt;\n    display: flex;\n`;\n\nconst Label = styled.label`\n    \n`;\n\nconst Select = styled.select`\n    font-size: inherit;\n    color: inherit;\n    background-color: inherit;\n    margin-left: auto;\n    min-width: 250px;\n  \n    & > option {\n      color: initial;\n      background-color: initial;\n    }\n`;\n\ninterface OptionProps {\n    label: string,\n    value: any\n}\n\ninterface Props {\n    label: string,\n    options: OptionProps[],\n    value: any,\n    setter: (value: any) => void\n}\n\nconst SettingsItem: React.FC<Props> = ({label, options, value, setter}) => {\n    const [t] = useTranslation();\n\n    const changeHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        setter(event.target.value);\n    }\n\n    return (\n        <Container>\n            <Label>{t(label)}</Label>\n            <Select value={value} onChange={changeHandler}>\n                {options.map((option, index) => (\n                    <option value={option.value} key={index}>{option.label}</option>\n                ))}\n            </Select>\n        </Container>\n    );\n};\n\nexport default SettingsItem;","import React from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"../../common/Card\";\nimport SettingsItem from \"./SettingsItem\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"../../../store\";\nimport {useTranslation} from \"react-i18next\";\nimport {themes} from \"../../../hooks/useTheme\";\nimport useTheme from \"../../../hooks/useTheme\";\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 20px 15%;\n    overflow-y: auto;\n`;\n\nconst SettingsCard = styled(Card)`\n  margin-bottom: 20px;\n`;\n\n\nconst Settings: React.FC = () => {\n    const settings = useSelector((state: RootState) => state.settings);\n    const dispatch = useDispatch();\n    const [t] = useTranslation();\n    const theme = useTheme();\n\n    const languageOptions = [{label: \"EN\", value: \"en\"}, {label: \"DE\", value: \"de\"}];\n    const languageWithInheritOptions = [...languageOptions, {label: t(\"common.inherit\"), value: \"inherit\"}];\n    const enableOptions = [{label: t(\"common.enable\"), value: true}, {label: t(\"common.disable\"), value: false}];\n\n    const updateSettings = (updatedSettings: {interfaceSettings?: {}, mathSettings?: {}}) => {\n        dispatch({\n            type: \"SET_SETTINGS\",\n            payload: {\n                interfaceSettings: {...settings.interfaceSettings, ...updatedSettings.interfaceSettings},\n                mathSettings: {...settings.mathSettings, ...updatedSettings.mathSettings}\n            }\n        });\n    };\n\n    return (\n        <Container>\n            <SettingsCard {...theme}>\n                <h1>{t(\"settings.interface\")}</h1>\n                <SettingsItem\n                    label=\"settings.language\"\n                    options={languageOptions}\n                    value={settings.interfaceSettings.language}\n                    setter={value => updateSettings({interfaceSettings: {language:  value}})}\n                />\n                <SettingsItem\n                    label=\"settings.advanced_input_mode\"\n                    options={enableOptions}\n                    value={settings.interfaceSettings.advancedInputMode}\n                    setter={value => updateSettings({interfaceSettings: {advancedInputMode: value === \"true\"}})}\n                />\n                <SettingsItem\n                    label=\"settings.show_cell_numbers\"\n                    options={enableOptions}\n                    value={settings.interfaceSettings.showLineNumbers}\n                    setter={value => updateSettings({interfaceSettings: {showLineNumbers: value === \"true\"}})}\n                />\n                <SettingsItem\n                    label=\"settings.copy_cell_content_on_click\"\n                    options={enableOptions}\n                    value={settings.interfaceSettings.copyCellContentOnClick}\n                    setter={value => updateSettings({interfaceSettings: {copyCellContentOnClick: value === \"true\"}})}\n                />\n                <SettingsItem\n                    label=\"settings.copy_manual_content_on_click\"\n                    options={enableOptions}\n                    value={settings.interfaceSettings.copyManualContentOnClick}\n                    setter={value => updateSettings({interfaceSettings: {copyManualContentOnClick: value === \"true\"}})}\n                />\n                <SettingsItem\n                    label=\"settings.cell_language_tag\"\n                    options={languageWithInheritOptions}\n                    value={settings.interfaceSettings.cellLanguageTag}\n                    setter={value => updateSettings({interfaceSettings: {cellLanguageTag: value}})}\n                />\n                <SettingsItem\n                    label=\"settings.theme\"\n                    options={themes.map(theme => {return {label: theme.toUpperCase(), value: theme}})}\n                    value={settings.interfaceSettings.theme}\n                    setter={value => updateSettings({interfaceSettings: {theme: value}})}\n                />\n            </SettingsCard>\n            <SettingsCard {...theme}>\n                <h1>{t(\"settings.calculator\")}</h1>\n                <SettingsItem\n                    label=\"settings.significant_decimal_places\"\n                    options={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15].map(x => {return {\n                        label: `${x}`,\n                        value: x\n                    }})}\n                    value={settings.mathSettings.significantDigits}\n                    setter={value => updateSettings({mathSettings: {significantDigits: value}})}\n                />\n                <SettingsItem\n                    label=\"settings.number_format\"\n                    options={languageWithInheritOptions}\n                    value={settings.mathSettings.numberFormat}\n                    setter={value => updateSettings({mathSettings: {numberFormat: value}})}\n                />\n            </SettingsCard>\n        </Container>\n    )\n}\n\nexport default Settings","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {RootState} from \"../../../store/index\";\nimport {changeCurrentInput} from \"../../../store/session/actions\";\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 3fr 7fr;\n    padding: 10px 20px;\n    grid-gap: 20px;\n    \n    &:hover {\n        outline: 2px solid black;\n    }\n`;\n\nconst Synopsis = styled.div<{copyable: boolean}>`\n    ${props => props.copyable ? `&:hover {\n        background-color: rgba(0, 0, 0, 0.1);\n    }` : null}\n`;\n\nconst Description = styled.div``;\n\ninterface Props {\n    synopsis: string,\n    description: string,\n    copyOnClick: boolean\n}\n\nconst ManualItem: React.FC<Props> = ({synopsis, description, copyOnClick}) => {\n    const copyManualContentOnClick = useSelector((state: RootState) => state.settings.interfaceSettings.copyManualContentOnClick);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const copyable = copyOnClick && copyManualContentOnClick;\n\n    const synopsisOnClick = () => {\n        console.log(\"clicked\")\n        if (copyable) {\n            dispatch(changeCurrentInput(synopsis));\n            history.push(\"/\");\n        }\n    }\n\n    return (\n        <Container>\n            <Synopsis onClick={synopsisOnClick} copyable={copyable}>\n                {synopsis}\n            </Synopsis>\n            <Description>\n                {description}\n            </Description>\n        </Container>\n    )\n}\n\nexport default ManualItem;","export const escapeRegExp = (str: string) => str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\nexport const camelToSnakeCase = (str: string) => str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);","import React from \"react\";\nimport styled from \"styled-components\";\nimport {Language} from \"../../../store/settings/types\";\nimport Card from \"../../common/Card\";\nimport ManualItem from \"./ManualItem\";\nimport {useTranslation} from \"react-i18next\";\nimport {escapeRegExp} from \"../../../utils\";\nimport useTheme from \"../../../hooks/useTheme\";\n\nconst Container = styled(Card)`\n    margin-bottom: 20px;\n`;\n\n\ninterface Props {\n    title: string,\n    language: Language,\n    items: any,\n    filter: string,\n    copyOnClick: boolean,\n}\n\nconst ManualCategory: React.FC<Props> = ({title, language, items, filter, copyOnClick}) => {\n    const [t] = useTranslation();\n    const theme = useTheme();\n\n    const filterFunction = (item: any) => item.synopsis[language].match(escapeRegExp(filter))\n        || item.description[language].match(escapeRegExp(filter));\n\n    if (items.filter(filterFunction).length === 0)\n        return null;\n\n    return (\n        <Container {...theme}>\n            <h1>{t(title)}</h1>\n            {\n                items\n                    .filter(filterFunction)\n                    .map((item: any, key: number) => <ManualItem key={key} copyOnClick={copyOnClick} synopsis={item.synopsis[language]} description={item.description[language]}/>)\n            }\n        </Container>\n    );\n};\n\nexport default ManualCategory;","import React, {useRef, useState} from \"react\";\nimport styled from \"styled-components\";\nimport ManualCategory from \"./ManualCategory\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../../../store\";\nimport InputText from \"../../common/InputText\";\nimport hotkeys from \"../../../hotkeys.json\";\n\n// @ts-ignore\nimport nd from \"@behrenle/number-drive\"\nimport {useTranslation} from \"react-i18next\";\nimport useRefEffect from \"../../../hooks/useRefEffect\";\nimport {camelToSnakeCase} from \"../../../utils\";\nimport useTheme from \"../../../hooks/useTheme\";\n\nconst Container = styled.div`\n    padding: 20px 15%;\n`;\n\nconst Manual: React.FC = () => {\n    const [filter, setFilter] = useState(\"\");\n    const language = useSelector((state: RootState) => state.settings.interfaceSettings.language);\n    const searchRef = useRef<HTMLInputElement>(null);\n    const [t] = useTranslation();\n    const theme = useTheme();\n    useRefEffect(searchRef, r => r.current.focus());\n\n    return (\n        <Container>\n            <InputText\n                type=\"text\"\n                {...theme}\n                style={{marginBottom: \"20px\"}}\n                placeholder={t(\"manual.search\")}\n                value={filter}\n                ref={searchRef}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => setFilter(event.target.value)}\n            />\n            <ManualCategory\n                title=\"manual.hotkeys\"\n                language={language}\n                items={\n                    Object.entries(hotkeys).map(hotkey => {\n                        const synopsis = hotkey[1].replaceAll(\"+\", \" + \").toUpperCase();\n                        const description = t(\"manual.hotkey_\" + camelToSnakeCase(hotkey[0]));\n                        return {\n                            synopsis: {de: synopsis, en: synopsis},\n                            description: {de: description, en: description}\n                        };\n                    })\n                }\n                filter={filter}\n                copyOnClick={false}\n            />\n            <ManualCategory\n                title=\"manual.constants\"\n                language={language}\n                items={nd.Manual.constants}\n                filter={filter}\n                copyOnClick={true}\n            />\n            <ManualCategory\n                title=\"manual.functions\"\n                language={language}\n                items={nd.Manual.functions}\n                filter={filter}\n                copyOnClick={true}\n            />\n        </Container>\n    )\n}\n\nexport default Manual","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 20px;\n    padding: 20px;\n`;\n\nconst Item = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nconst LeftItem = styled(Item)`\n    align-items: flex-end;\n    font-weight: 400;\n`;\n\nconst RightItem = styled(Item)`\n    align-items: flex-start;\n`;\n\nconst StyledSpan = styled.span`\n    font-weight: inherit;\n`;\n\ntype PropsItem = string | string[];\n\ninterface Props {\n    items: PropsItem[]\n}\n\nconst CenteredDefinitionListItem: React.FC<{item: PropsItem}> = ({item}) => {\n    if (typeof item === \"string\") {\n        return (<StyledSpan>{item}</StyledSpan>);\n    }\n    return (\n        <>\n            {\n                item.map((v, i) => <StyledSpan key={i}>{v}</StyledSpan>)\n            }\n        </>\n    )\n}\n\nconst CenteredDefinitionList: React.FC<Props> = ({items}) => {\n    return (\n        <Container>\n            {\n                items.map((v, i) => i % 2 !== 0\n                    ? <RightItem key={i}><CenteredDefinitionListItem item={v}/></RightItem>\n                    : <LeftItem key={i}><CenteredDefinitionListItem item={v}/></LeftItem>\n                )\n            }\n        </Container>\n    );\n};\n\nexport default CenteredDefinitionList;","import React from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"../../common/Card\";\nimport CenteredDefinitionList from \"./CenteredDefinitionList\";\nimport {author, dependencies, license, version} from \"../../../../package.json\";\nimport {useTranslation} from \"react-i18next\";\nimport useTheme from \"../../../hooks/useTheme\";\n\nconst Container = styled.div`\n    padding: 20px 15%;\n`;\n\nconst Content = styled.div`\n    padding: 20px;\n`;\n\n\nconst About: React.FC = () => {\n    const [t] = useTranslation();\n    const theme = useTheme();\n\n    return (\n        <Container>\n            <Card {...theme}>\n                <h1>{t(\"about.general\")}</h1>\n                <CenteredDefinitionList\n                    items={[\n                        t(\"about.version\"), version,\n                        t(\"about.author\"), [author.name, author.email],\n                        t(\"about.license\"), license\n                    ]}\n                />\n            </Card>\n            <Card style={{marginTop: \"20px\"}} {...theme}>\n                <h1>{t(\"about.dependencies\")}</h1>\n                <CenteredDefinitionList\n                    items={\n                        Object.entries(dependencies).flatMap(v => [\n                            v[0], v[1].charAt(0) === \"^\"\n                                ? v[1].substring(1)\n                                : v[1]\n                        ])\n                    }\n                />\n                <Content // todo maybe replace with trans component because html injection is unsafe\n                    dangerouslySetInnerHTML={{\n                        __html: t(\"about.more_info\", {url: \"https://www.npmjs.com/\", label: \"npmjs.com\"})\n                    }}\n                />\n            </Card>\n        </Container>\n    )\n}\n\nexport default About","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport \"../../i18n/index\";\nimport styled from \"styled-components\";\nimport Navbar from \"./navbar/Navbar\";\nimport Calculator from \"../views/calculator/Calculator\";\nimport Settings from \"../views/settings/Settings\";\nimport Manual from \"../views/manual/Manual\";\nimport About from \"../views/about/About\";\nimport useTheme, {Theme} from \"../../hooks/useTheme\";\n\nconst views = [\n    {name: \"navbar.calculator\", path: \"/\", component: Calculator},\n    {name: \"navbar.settings\", path: \"/settings\", component: Settings},\n    {name: \"navbar.manual\", path: \"/manual\", component: Manual},\n    {name: \"navbar.about\", path: \"/about\", component: About}\n]\n\nconst navbarProps = {\n    title: `Math Explorer`,\n    items: views.map(view => {\n        return {name: view.name, path: view.path}\n    })\n};\n\nconst Container = styled.div<Theme>`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-color: ${props => props?.app?.backgroundColor};\n  background-size: cover;\n  background-repeat: repeat;\n  ${\n          props => props.app.backgroundImage.length > 0\n                  ? `background-image: url(${process.env.PUBLIC_URL + props.app.backgroundImage});` : null\n  }\n  display: grid;\n  grid-template-rows: 80px auto;\n`;\n\nconst Content = styled.main`\n  z-index: 0;\n  overflow-y: auto;\n  width: 100%;\n  height: 100%;\n`;\n\nconst App: React.FC = () => {\n    const theme = useTheme();\n\n    return (\n        <Container {...theme}>\n            <Navbar {...navbarProps}/>\n            <Content>\n                <Switch>\n                    {views.map((view, i) => <Route key={i} exact path={view.path} component={view.component}/>)}\n                </Switch>\n            </Content>\n        </Container>\n    );\n};\n\nexport default App;\n","import {Settings} from \"./types\";\n\nconst defaultSettings: Settings = {\n    mathSettings: {\n        numberFormat: \"inherit\",\n        significantDigits: 6\n    },\n    interfaceSettings: {\n        cellLanguageTag: \"inherit\",\n        language: \"de\",\n        advancedInputMode: false,\n        copyManualContentOnClick: true,\n        copyCellContentOnClick: true,\n        showLineNumbers: true,\n        theme: \"light\"\n    }\n};\n\nconst localStorageSettingsKey = \"settings\";\n\nexport const loadSettings = (): Settings => {\n    const settingsData = localStorage.getItem(localStorageSettingsKey);\n    const settings = settingsData !== undefined && settingsData !== null\n        ? JSON.parse(settingsData)\n        : {};\n\n    return {...defaultSettings, ...settings};\n};\n\nexport const saveSettings = (settings: Settings) => {\n    localStorage.removeItem(localStorageSettingsKey); // kind of unnecessary lol\n    localStorage.setItem(localStorageSettingsKey, JSON.stringify(settings));\n    return settings;\n};\n\n","import {Settings, SettingsAction} from \"./types\";\nimport {loadSettings, saveSettings} from \"./settingsUtils\";\nimport i18n from \"../../i18n/index\";\n\nconst initialState = loadSettings();\n\n/* todo use redux-create-reducer package */\nconst settingsReducer = (state = initialState, action: SettingsAction): Settings => {\n    switch (action.type) {\n        case \"SET_SETTINGS\":\n            i18n.changeLanguage(action.payload.interfaceSettings.language).catch(console.error);\n            return saveSettings(action.payload);\n\n        case \"SET_INTERFACE_SETTINGS\":\n            return settingsReducer(state, {\n                type: \"SET_SETTINGS\",\n                payload: {...state, interfaceSettings: action.payload}\n            });\n\n        case \"SET_MATH_SETTINGS\":\n            return settingsReducer(state, {\n                type: \"SET_SETTINGS\",\n                payload: {...state, mathSettings: action.payload}\n            });\n\n        default:\n            i18n.changeLanguage(state.interfaceSettings.language).catch(console.error)\n            return state;\n    }\n};\n\nexport default settingsReducer;","import {Session, SessionAction} from \"./types\";\n// todo ts declaration file for number-drive or write ts version of numberdrive\n// @ts-ignore\nimport numberdrive from \"@behrenle/number-drive\";\n\nconst script = new numberdrive.Script(\"en\", );\n\nconst initialState: Session = {\n    currentInput: \"\",\n    mathHistory: []\n};\n\n/* todo use redux-create-reducer package */\nconst sessionReducer = (state = initialState, action: SessionAction): Session => {\n    switch (action.type) {\n        case \"CHANGE_CURRENT_INPUT\":\n            return {...state, currentInput: action.payload};\n\n        case \"CLEAR_CURRENT_INPUT\":\n            return {...state, currentInput: \"\"};\n\n        case \"CLEAR_MATH_HISTORY\":\n            return {...state, mathHistory: []};\n\n        case \"EVALUATE_INPUT\":\n            script.evaluate(\n                state.currentInput,\n                action.payload.language,\n                parseInt(action.payload.significantDigits + \"\") // fix typescript bug\n            );\n            const scriptItems = script.getItems();\n            return {...state, mathHistory: state.mathHistory.concat(scriptItems.slice(-1))};\n\n        case \"CLEAR_MATH_USER_SCOPE\":\n            /* todo clear user scope */\n            script.clearUserScope();\n            return state;\n\n        default:\n            return state;\n    }\n}\n\nexport default sessionReducer;","import {combineReducers} from \"redux\";\nimport settingsReducer from \"./settings/reducers\";\nimport sessionReducer from \"./session/reducers\";\n\nexport const rootReducer = combineReducers({\n    settings: settingsReducer,\n    session: sessionReducer\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import React from \"react\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport App from \"./App\";\nimport initStore from \"../../store/createStore\";\n\nconst store = initStore();\n\nconst AppWrapper: React.FC = () => {\n    return (\n        <Provider store={store}>\n            <HashRouter>\n                <App/>\n            </HashRouter>\n        </Provider>\n    )\n}\n\nexport default AppWrapper","import {createStore} from \"redux\";\nimport {rootReducer} from \"./index\";\n\nconst initStore = () => createStore(rootReducer);\nexport default initStore;","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register() {\n    if (\"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL!,\n            window.location.toString(),\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://goo.gl/SC7cgQ\",\n                    );\n                });\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string) {\n    navigator.serviceWorker\n        .register(swUrl, {scope: \".\"})\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === \"installed\") {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log(\"New content is available; please refresh.\");\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log(\"Content is cached for offline use.\");\n                            }\n                        }\n                    };\n                }\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().catch(console.error);\n        });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppWrapper from \"./components/app/AppWrapper\";\nimport {register as registerServiceWorker} from \"./serviceWorker\";\n\nregisterServiceWorker();\nReactDOM.render(\n    <React.StrictMode>\n        <AppWrapper/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}