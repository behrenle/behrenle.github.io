{"version":3,"sources":["store/settings/settingsUtils.ts","i18n/index.ts","store/settings/reducers.ts","store/session/reducers.ts","store/index.ts","store/createStore.ts","components/app/navbar/NavbarItem.tsx","components/app/navbar/Navbar.tsx","components/common/Sidebar.tsx","store/session/actions.ts","components/views/calculator/CalculatorSidebar.tsx","components/common/InputText.tsx","components/views/calculator/InputField.tsx","hooks/useHotkeyDispatch.tsx","hooks/useHotkeyRef.tsx","hooks/useRefEffect.tsx","components/views/calculator/SimpleInputForm.tsx","components/common/Card.tsx","components/views/calculator/AdvancedInputForm.tsx","components/views/calculator/Calculator.tsx","components/views/settings/SettingsItem.tsx","components/views/settings/Settings.tsx","components/views/manual/ManualItem.tsx","utils.ts","components/views/manual/ManualCategory.tsx","components/views/manual/Manual.tsx","components/views/about/CenteredDefinitionList.tsx","components/views/about/About.tsx","components/app/App.tsx","serviceWorker.ts","index.tsx"],"names":["defaultSettings","mathSettings","numberFormat","significantDigits","interfaceSettings","cellLanguageTag","language","advancedInputMode","copyManualContentOnClick","copyCellContentOnClick","showLineNumbers","localStorageSettingsKey","saveSettings","settings","localStorage","removeItem","setItem","JSON","stringify","resources","en","translation","de","i18n","use","initReactI18next","init","lng","fallbackLng","keySeparator","interpolation","escapeValue","catch","console","log","initialState","settingsData","getItem","undefined","parse","loadSettings","settingsReducer","state","action","type","changeLanguage","payload","error","script","numberdrive","Script","currentInput","mathHistory","sessionReducer","evaluate","parseInt","scriptItems","getItems","concat","slice","clearUserScope","rootReducer","combineReducers","session","initStore","createStore","StyledLink","styled","Link","props","enabled","NavbarItem","name","path","location","useLocation","useState","active","setActive","useEffect","pathname","useTranslation","t","to","toString","Container","div","Logo","img","Title","span","Navbar","title","items","src","process","alt","map","item","index","Sidebar","children","changeCurrentInput","input","CalculatorSidebar","dispatch","useDispatch","useSelector","onClick","InputText","attrs","InputField","React","forwardRef","forwardedRef","value","interfaceLanguage","mathLanguage","ref","placeholder","onChange","event","target","onKeyPress","key","hotkeyOptions","filter","useHotkeyDispatch","hotkey","dispatchAction","setDispatchAction","useHotkeys","Array","forEach","a","useHotkeyRef","effect","current","useRefEffect","deps","StyledOutputField","SimpleInputForm","lastOutput","length","output","outputRef","useRef","inputRef","r","focus","select","focusInput","focusOutput","readOnly","Card","MathHistoryContainer","MathHistoryContainerWrapper","MathHistoryItemContainer","showCellNumbers","MathHistoryItemLineCounter","MathHistoryItemLabel","MathHistoryItemValue","copyable","MathHistoryItem","copyOnClick","languageTag","lang","MathHistory","containerRef","scrollTop","scrollHeight","AdvancedInputForm","i","Calculator","currentOutput","clearInput","clearOutput","clearMemory","clearAll","copyInputAndOutput","navigator","clipboard","writeText","selectedInputForm","Label","label","Select","SettingsItem","options","setter","option","SettingsCard","Settings","languageOptions","languageWithInheritOptions","enableOptions","updateSettings","updatedSettings","x","Synopsis","Description","ManualItem","synopsis","description","history","useHistory","push","escapeRegExp","str","replace","ManualCategory","filterFunction","match","Manual","setFilter","searchRef","style","marginBottom","Object","entries","hotkeys","replaceAll","toUpperCase","letter","toLowerCase","nd","constants","functions","Item","LeftItem","RightItem","StyledSpan","CenteredDefinitionListItem","v","CenteredDefinitionList","Content","About","version","author","email","license","marginTop","dependencies","flatMap","charAt","substring","dangerouslySetInnerHTML","__html","url","store","views","component","navbarProps","view","App","exact","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.736bd699.chunk.js","sourcesContent":["import {Settings} from \"./types\";\n\nconst defaultSettings: Settings = {\n    mathSettings: {\n        numberFormat: \"inherit\",\n        significantDigits: 6\n    },\n    interfaceSettings: {\n        cellLanguageTag: \"inherit\",\n        language: \"de\",\n        advancedInputMode: false,\n        copyManualContentOnClick: true,\n        copyCellContentOnClick: true,\n        showLineNumbers: true\n    }\n};\n\nconst localStorageSettingsKey = \"settings\";\n\nexport const loadSettings = (): Settings => {\n    const settingsData = localStorage.getItem(localStorageSettingsKey);\n    const settings = settingsData !== undefined && settingsData !== null\n        ? JSON.parse(settingsData)\n        : {};\n\n    return {...defaultSettings, ...settings};\n};\n\nexport const saveSettings = (settings: Settings) => {\n    localStorage.removeItem(localStorageSettingsKey); // kind of unnecessary lol\n    localStorage.setItem(localStorageSettingsKey, JSON.stringify(settings));\n    return settings;\n};\n\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport enLangData from \"./translations/en.json\";\nimport deLangData from \"./translations/de.json\"\n\nconst resources = {\n    en: {translation: enLangData},\n    de: {translation: deLangData}\n};\n\ni18n\n    .use(initReactI18next)\n    .init({\n        resources,\n        lng: \"en\",\n        fallbackLng: \"en\",\n        keySeparator: false,\n        interpolation: {\n            escapeValue: false\n        }\n    }).catch(console.log);\n\n\nexport default i18n;\n","import {Settings, SettingsAction} from \"./types\";\nimport {loadSettings, saveSettings} from \"./settingsUtils\";\nimport i18n from \"../../i18n/index\";\n\nconst initialState = loadSettings();\n\n/* todo use redux-create-reducer package */\nconst settingsReducer = (state = initialState, action: SettingsAction): Settings => {\n    switch (action.type) {\n        case \"SET_SETTINGS\":\n            i18n.changeLanguage(action.payload.interfaceSettings.language).catch(console.error);\n            return saveSettings(action.payload);\n\n        case \"SET_INTERFACE_SETTINGS\":\n            return settingsReducer(state, {\n                type: \"SET_SETTINGS\",\n                payload: {...state, interfaceSettings: action.payload}\n            });\n\n        case \"SET_MATH_SETTINGS\":\n            return settingsReducer(state, {\n                type: \"SET_SETTINGS\",\n                payload: {...state, mathSettings: action.payload}\n            });\n\n        default:\n            i18n.changeLanguage(state.interfaceSettings.language).catch(console.error)\n            return state;\n    }\n};\n\nexport default settingsReducer;","import {Session, SessionAction} from \"./types\";\n// todo ts declaration file for number-drive or write ts version of numberdrive\n// @ts-ignore\nimport numberdrive from \"@behrenle/number-drive\";\n\nconst script = new numberdrive.Script(\"en\", );\n\nconst initialState: Session = {\n    currentInput: \"\",\n    mathHistory: []\n};\n\n/* todo use redux-create-reducer package */\nconst sessionReducer = (state = initialState, action: SessionAction): Session => {\n    switch (action.type) {\n        case \"CHANGE_CURRENT_INPUT\":\n            return {...state, currentInput: action.payload};\n\n        case \"CLEAR_CURRENT_INPUT\":\n            return {...state, currentInput: \"\"};\n\n        case \"CLEAR_MATH_HISTORY\":\n            return {...state, mathHistory: []};\n\n        case \"EVALUATE_INPUT\":\n            script.evaluate(\n                state.currentInput,\n                action.payload.language,\n                parseInt(action.payload.significantDigits + \"\") // fix typescript bug\n            );\n            const scriptItems = script.getItems();\n            return {...state, mathHistory: state.mathHistory.concat(scriptItems.slice(-1))};\n\n        case \"CLEAR_MATH_USER_SCOPE\":\n            /* todo clear user scope */\n            script.clearUserScope();\n            return state;\n\n        default:\n            return state;\n    }\n}\n\nexport default sessionReducer;","import {combineReducers} from \"redux\";\nimport settingsReducer from \"./settings/reducers\";\nimport sessionReducer from \"./session/reducers\";\n\nexport const rootReducer = combineReducers({\n    settings: settingsReducer,\n    session: sessionReducer\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import {createStore} from \"redux\";\nimport {rootReducer} from \"./index\";\n\nconst initStore = () => createStore(rootReducer);\nexport default initStore;","import React, {useEffect, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {Link} from \"react-router-dom\";\nimport {useLocation} from \"react-router-dom\";\nimport {useTranslation} from \"react-i18next\";\n\nconst StyledLink = styled(Link)`\n    padding: 0 20px;\n    color: white;\n    text-decoration: none;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    ${\n        (props: {enabled: string}) => props.enabled === \"true\"\n            ? `border-bottom: 4px solid white; padding-top: 4px;` : null\n    }\n    &:hover {\n        background-color: rgba(255, 255, 255, 0.2);\n    }\n    \n    &:focus {\n        outline: 2px solid white;\n    }\n`;\n\ninterface Props {\n    name: string,\n    path: string\n}\n\nconst NavbarItem: React.FC<Props> = ({name, path}) => {\n    const location = useLocation();\n    const [active, setActive] = useState(false);\n    useEffect(() => {\n        setActive(location.pathname === path)\n    }, [location, path]);\n    const [t] = useTranslation();\n\n    return (\n        <StyledLink to={path} enabled={active.toString()}>{t(name)}</StyledLink>\n    )\n}\n\nexport default NavbarItem","import React from \"react\";\nimport styled from \"styled-components\";\nimport NavbarItem from \"./NavbarItem\";\n\nconst Container = styled.div`\n    display: flex;\n    font-size: 36pt;\n    background-color: #1D3971;\n    color: white;\n    height: 80px;\n    align-items: center;\n    box-shadow: 0 5px 5px rgba(0, 0, 0, 0.20);\n    z-index: 1;\n`;\n\nconst Logo = styled.img`\n    width: 80px;\n    height: 80px;\n    padding: 10px;\n`;\n\nconst Title = styled.span`\n    margin-right: auto;\n    padding: 10px;\n`;\n\ninterface PropsItem {\n    name: string,\n    path: string\n}\n\ninterface Props {\n    title: string,\n    items: PropsItem[]\n}\n\nconst Navbar: React.FC<Props> = ({title, items}) => {\n    return (\n        <Container>\n            <Logo src={process.env.PUBLIC_URL + \"/logo.png\"} alt=\"logo\"/>\n            <Title>{title}</Title>\n            {items.map((item, index) => <NavbarItem key={index} name={item.name} path={item.path}/>)}\n        </Container>\n    );\n}\n\nexport default Navbar;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    background-color: white;\n    box-shadow: 5px 0 5px rgba(0, 0, 0, 0.15);\n    display: flex;\n    flex-direction: column;\n    \n    & button {\n        background: none;\n        border: none;\n        outline: none;\n        font-size: 28pt;\n        padding: 20px;\n        text-align: left;\n    }\n    \n    & button:hover {\n        background-color: rgba(0, 0, 0, 0.2);\n        font-weight: 400;\n    }\n    \n    & button:disabled:hover {\n        background: none;\n        font-weight: 300;\n    }\n    \n    & button:focus {\n        border: 2px solid black;\n        padding: 18px;\n    }\n`;\n\nconst Sidebar: React.FC<{}> = ({children}) => {\n    return (\n        <Container>\n            {children}\n        </Container>\n    )\n};\n\nexport default Sidebar;","import {SessionAction} from \"./types\";\nimport {Language, SignificantDigits} from \"../settings/types\";\n\nexport const changeCurrentInput = (input: string): SessionAction => {\n    return {\n        type: \"CHANGE_CURRENT_INPUT\",\n        payload: input\n    };\n};\n\nexport const clearCurrentInput = (): SessionAction => {\n    return {\n        type: \"CLEAR_CURRENT_INPUT\"\n    };\n};\n\nexport const evaluate = (language: Language, significantDigits: SignificantDigits): SessionAction => {\n    return {\n        type: \"EVALUATE_INPUT\",\n        payload: {\n            language,\n            significantDigits\n        }\n    };\n};\n\nexport const clearMathHistory = (): SessionAction => {\n    return {\n        type: \"CLEAR_MATH_HISTORY\"\n    };\n};\n\nexport const clearMathUserScope = (): SessionAction => {\n    return {\n        type: \"CLEAR_MATH_USER_SCOPE\"\n    };\n};","import React from \"react\";\nimport Sidebar from \"../../common/Sidebar\";\nimport {useTranslation} from \"react-i18next\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {clearCurrentInput, clearMathHistory, clearMathUserScope} from \"../../../store/session/actions\";\nimport {RootState} from \"../../../store\";\n\nconst CalculatorSidebar: React.FC = () => {\n    const dispatch = useDispatch();\n    const [t] = useTranslation();\n    const advancedInputMode = useSelector((state: RootState) => state.settings.interfaceSettings.advancedInputMode);\n\n    const clearAll = () => {\n        dispatch(clearMathHistory());\n        dispatch(clearCurrentInput());\n        dispatch(clearMathUserScope());\n    };\n\n    return (\n        <Sidebar>\n            <button onClick={() => dispatch(clearMathHistory())}>\n                {t(advancedInputMode ? \"calculator.clear_history\" : \"calculator.clear_output\")}\n            </button>\n            <button onClick={() => dispatch(clearCurrentInput())}>\n                {t(\"calculator.clear_input\")}\n            </button>\n            <button onClick={() => dispatch(clearMathUserScope())}>\n                {t(\"calculator.clear_memory\")}\n            </button>\n            <button onClick={clearAll}>\n                {t(\"calculator.clear_all\")}\n            </button>\n            {/*<button disabled={true} style={{marginTop:\"auto\"}}>New Document</button>\n            <button disabled={true}>Save Document</button>\n            <button disabled={true}>Load Document</button>*/}\n        </Sidebar>\n    );\n}\n\nexport default CalculatorSidebar;","import styled from \"styled-components\";\n\nconst InputText = styled.input.attrs({type: \"text\"})`\n    width: 100%;\n    padding: 20px;\n    border: none;\n    box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.1);\n    \n    &:focus {\n        outline: 2px solid black;\n    }\n`;\n\nexport default InputText;","import React from \"react\";\nimport InputText from \"../../common/InputText\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changeCurrentInput, evaluate} from \"../../../store/session/actions\";\nimport {RootState} from \"../../../store\";\nimport {useTranslation} from \"react-i18next\";\n\nconst InputField = React.forwardRef((props, forwardedRef) => {\n    const dispatch = useDispatch();\n    const value = useSelector((state: RootState) => state.session.currentInput);\n    const interfaceLanguage = useSelector((state: RootState) => state.settings.interfaceSettings.language);\n    const mathLanguage = useSelector((state: RootState) => state.settings.mathSettings.numberFormat);\n    const significantDigits = useSelector((state: RootState) => state.settings.mathSettings.significantDigits);\n    const [t] = useTranslation();\n\n    const changeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(changeCurrentInput(event.target.value));\n    };\n\n    const keypressInput = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === \"Enter\")\n            dispatch(evaluate(\n                mathLanguage === \"inherit\" ? interfaceLanguage : mathLanguage,\n                significantDigits\n            ));\n    }\n\n    // @ts-ignore\n    return (<InputText ref={forwardedRef}\n        placeholder={t(\"common.input\")}\n        onChange={changeInput}\n        onKeyPress={keypressInput}\n        value={value}\n    />);\n});\n\nexport default InputField;","import {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {useHotkeys} from \"react-hotkeys-hook\";\n\nconst hotkeyFilter = () => true;\nexport const hotkeyOptions = {filter: hotkeyFilter};\n\ninterface Action {\n    type: string,\n}\n\nconst useHotkeyDispatch = (hotkey: string, action: Action | Action[]) => {\n    const dispatch = useDispatch()\n    const [dispatchAction, setDispatchAction] = useState(false);\n    useHotkeys(hotkey, () => setDispatchAction(true), hotkeyOptions, []);\n\n    if (dispatchAction) {\n        if (action instanceof Array) {\n            action.forEach(a => dispatch(a));\n        } else {\n            dispatch(action);\n        }\n        setDispatchAction(false);\n    }\n}\n\nexport default useHotkeyDispatch;","import React from \"react\";\nimport {useHotkeys} from \"react-hotkeys-hook\";\nimport {hotkeyOptions} from \"./useHotkeyDispatch\";\n\nconst useHotkeyRef = (hotkey: string, ref: React.RefObject<any>, effect: (ref: React.RefObject<any>) => void) => {\n    useHotkeys(hotkey, () => {\n        if (ref.current)\n            effect(ref);\n    }, hotkeyOptions, []);\n};\n\nexport default useHotkeyRef;","import React, {useEffect} from \"react\";\n\nconst useRefEffect = (ref: React.RefObject<any>, effect: (ref: React.RefObject<any>) => void, deps: any[] = []) => {\n    useEffect(() => {\n        if (ref.current)\n            effect(ref);\n    }, deps);\n}\n\nexport default useRefEffect;","import React, {useRef} from \"react\";\nimport styled from \"styled-components\";\nimport {RootState} from \"../../../store\";\nimport {useSelector} from \"react-redux\";\nimport InputText from \"../../common/InputText\";\nimport InputField from \"./InputField\";\nimport {useTranslation} from \"react-i18next\";\nimport {focusInput, focusOutput} from \"../../../hotkeys.json\";\nimport useHotkeyRef from \"../../../hooks/useHotkeyRef\";\nimport useRefEffect from \"../../../hooks/useRefEffect\";\n\nconst Container = styled.div`\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst StyledOutputField = styled(InputText)`\n    margin-top: 20px;\n`;\n\nconst SimpleInputForm: React.FC = () => {\n    const lastOutput: string = useSelector((state: RootState) => state.session.mathHistory.length < 1\n        ? \"\" : state.session.mathHistory[state.session.mathHistory.length - 1].output\n    );\n    const outputRef = useRef<HTMLInputElement>(null);\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [t] = useTranslation();\n    useRefEffect(outputRef, r => {r.current.focus(); r.current.select()}, [lastOutput]);\n    useRefEffect(inputRef, r => r.current.focus());\n    useHotkeyRef(focusInput, inputRef, (r) => r.current.focus());\n    useHotkeyRef(focusOutput, outputRef, (r) => r.current.focus());\n\n    const outputOnKeyPress = (event: React.KeyboardEvent) => {\n        if (event.key === \"Enter\" && inputRef.current)\n            inputRef.current.focus();\n    }\n\n    return (\n        <Container>\n            <InputField ref={inputRef}/>\n            <StyledOutputField\n                readOnly={true}\n                placeholder={t(\"common.output\")}\n                value={lastOutput}\n                ref={outputRef}\n                onKeyPress={outputOnKeyPress}\n            />\n        </Container>\n    )\n}\n\nexport default SimpleInputForm;","import styled from \"styled-components\";\n\nconst Card = styled.div`\n    background-color: white;\n    box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.1);\n    \n    & h1 {\n        font-size: 36pt;\n        background-color: rgba(0, 0, 0, 0.08);\n        margin: 0;\n        padding: 10px 20px;\n    }\n`;\n\nexport default Card;","import React, {useEffect, useRef} from \"react\";\nimport styled from \"styled-components\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"../../../store\";\nimport InputField from \"./InputField\";\nimport Card from \"../../common/Card\";\nimport {useTranslation} from \"react-i18next\";\nimport {useHotkeys} from \"react-hotkeys-hook\";\nimport {focusInput} from \"../../../hotkeys.json\";\nimport {changeCurrentInput} from \"../../../store/session/actions\";\nimport useRefEffect from \"../../../hooks/useRefEffect\";\n\nconst Container = styled.div`\n    padding: 20px;\n    display: grid;\n    overflow: hidden;\n    grid-template-rows: 1fr auto;\n    grid-gap: 20px;\n`;\n\nconst MathHistoryContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n`;\n\nconst MathHistoryContainerWrapper = styled(Card)`\n    overflow-y: auto;\n    -ms-overflow-style: none;\n    \n    &::-webkit-scrollbar {\n        display: none;\n    }\n`;\n\nconst MathHistoryItemContainer = styled.div<{showCellNumbers: boolean}>`\n    display: grid;\n    grid-template-columns: ${ props => props.showCellNumbers ? \"80px auto 1fr\" : \"auto 1fr\" };\n    grid-template-rows: auto auto;\n    padding: 10px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.25);\n`;\n\nconst MathHistoryItemLineCounter = styled.div`\n    grid-row: span 2;\n    opacity: 0.4;\n    user-select: none;\n    padding: 10px\n`;\n\nconst MathHistoryItemLabel = styled.div`\n    text-align: right;\n    font-weight: 300;\n    font-size: 20pt;\n    align-self: center;\n    padding: 0 10px;\n`;\n\nconst MathHistoryItemValue = styled.span<{copyable: boolean}>`\n    padding: 10px;\n    ${\n        props => props.copyable ? \"&:hover { background-color: rgba(0, 0, 0, 0.1); }\" : null\n    }\n`;\n\ninterface MathHistoryItemProps {\n    index: number,\n    input: string,\n    output: string\n}\n\nconst MathHistoryItem: React.FC<MathHistoryItemProps> = ({index,input, output}) => {\n    const [t] = useTranslation();\n    const copyOnClick = useSelector((state: RootState) => state.settings.interfaceSettings.copyCellContentOnClick);\n    const showCellNumbers = useSelector((state: RootState) => state.settings.interfaceSettings.showLineNumbers);\n    const language = useSelector((state: RootState) => state.settings.interfaceSettings.language);\n    const cellLanguageTag = useSelector((state: RootState) => state.settings.interfaceSettings.cellLanguageTag);\n    const dispatch = useDispatch();\n\n    const languageTag = cellLanguageTag === \"inherit\" ? language : cellLanguageTag;\n\n    const onClick = (type: \"input\" | \"output\") => {\n        if (copyOnClick)\n            dispatch(changeCurrentInput(type === \"input\"\n                ? input\n                : output\n            ));\n    };\n\n    return (\n        <MathHistoryItemContainer showCellNumbers={showCellNumbers}>\n            { showCellNumbers ? <MathHistoryItemLineCounter>#{index + 1}</MathHistoryItemLineCounter> : null }\n            <MathHistoryItemLabel>{t(\"common.input\")}</MathHistoryItemLabel>\n            <MathHistoryItemValue\n                lang={languageTag}\n                copyable={copyOnClick}\n                onClick={() => onClick(\"input\")}\n            > {input}</MathHistoryItemValue>\n            <MathHistoryItemLabel>{t(\"common.output\")}</MathHistoryItemLabel>\n            <MathHistoryItemValue\n                lang={languageTag}\n                copyable={copyOnClick}\n                onClick={() => onClick(\"output\")}\n            > {output}</MathHistoryItemValue>\n        </MathHistoryItemContainer>\n    );\n}\n\nconst MathHistory: React.FC<{ items: MathHistoryItemProps[] }> = ({items}) => {\n    const containerRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (containerRef.current)\n            containerRef.current.scrollTop = containerRef.current.scrollHeight;\n    }, [items])\n\n    return (\n        <MathHistoryContainerWrapper ref={containerRef}>\n            <MathHistoryContainer>\n                {\n                    items.map(item => <MathHistoryItem\n                        key={item.index}\n                        index={item.index}\n                        input={item.input}\n                        output={item.output}\n                    />)\n                }\n            </MathHistoryContainer>\n        </MathHistoryContainerWrapper>\n    )\n}\n\nconst AdvancedInputForm: React.FC = () => {\n    const mathHistory = useSelector((state: RootState) => state.session.mathHistory);\n    const inputRef = useRef<HTMLInputElement>(null);\n    useHotkeys(focusInput, () => {\n        if (inputRef.current)\n            inputRef.current.focus();\n    }, {filter: () => true}, []);\n    useRefEffect(inputRef, (r) => r.current.focus(), []);\n\n    return (\n        <Container>\n            <MathHistory items={mathHistory.map((item, i) => {return {...item, index: i}})}/>\n            <InputField ref={inputRef}/>\n        </Container>\n    )\n}\n\nexport default AdvancedInputForm;","import React from \"react\";\nimport styled from \"styled-components\";\nimport CalculatorSidebar from \"./CalculatorSidebar\";\nimport SimpleInputForm from \"./SimpleInputForm\";\nimport AdvancedInputForm from \"./AdvancedInputForm\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../../../store\";\nimport {clearAll, clearInput, clearMemory, clearOutput, copyInputAndOutput} from \"../../../hotkeys.json\";\nimport {clearCurrentInput, clearMathHistory, clearMathUserScope} from \"../../../store/session/actions\";\nimport useHotkeyDispatch, {hotkeyOptions} from \"../../../hooks/useHotkeyDispatch\";\nimport {useHotkeys} from \"react-hotkeys-hook\";\nimport {useTranslation} from \"react-i18next\";\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 350px auto;\n    height: 100%;\n`;\n\nconst Calculator: React.FC = () => {\n    const advancedInputMode = useSelector((state: RootState) => state.settings.interfaceSettings.advancedInputMode);\n    const [t] = useTranslation();\n    const [currentInput, currentOutput] = useSelector((state: RootState) => [state.session.currentInput, state.session.mathHistory[state.session.mathHistory.length - 1]?.output || \"\"]);\n    useHotkeyDispatch(clearInput, clearCurrentInput());\n    useHotkeyDispatch(clearOutput, clearMathHistory());\n    useHotkeyDispatch(clearMemory, clearMathUserScope());\n    useHotkeyDispatch(clearAll, [clearCurrentInput(), clearMathHistory(), clearMathUserScope()]);\n    useHotkeys(copyInputAndOutput, () => {\n        navigator.clipboard.writeText(`${t(\"common.input\")}: ${currentInput}\\n${t(\"common.output\")}: ${currentOutput}`).catch(console.error);\n    }, hotkeyOptions);\n\n    const selectedInputForm = advancedInputMode ? <AdvancedInputForm/> : <SimpleInputForm/>;\n\n    return (\n        <Container>\n            <CalculatorSidebar/>\n            {selectedInputForm}\n        </Container>\n    )\n}\n\nexport default Calculator","import React from \"react\";\nimport styled from \"styled-components\";\nimport {useTranslation} from \"react-i18next\";\n\nconst Container = styled.div`\n    padding: 10px 20px;\n    font-size: 28pt;\n    display: flex;\n`;\n\nconst Label = styled.label`\n    \n`;\n\nconst Select = styled.select`\n    font-size: inherit;\n    margin-left: auto;\n    min-width: 250px;\n`;\n\ninterface OptionProps {\n    label: string,\n    value: any\n}\n\ninterface Props {\n    label: string,\n    options: OptionProps[],\n    value: any,\n    setter: (value: any) => void\n}\n\nconst SettingsItem: React.FC<Props> = ({label, options, value, setter}) => {\n    const [t] = useTranslation();\n\n    const changeHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        setter(event.target.value);\n    }\n\n    return (\n        <Container>\n            <Label>{t(label)}</Label>\n            <Select value={value} onChange={changeHandler}>\n                {options.map((option, index) => (\n                    <option value={option.value} key={index}>{option.label}</option>\n                ))}\n            </Select>\n        </Container>\n    );\n};\n\nexport default SettingsItem;","import React from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"../../common/Card\";\nimport SettingsItem from \"./SettingsItem\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"../../../store\";\nimport {useTranslation} from \"react-i18next\";\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 20px 15%;\n    overflow-y: auto;\n`;\n\nconst SettingsCard = styled(Card)`\n  margin-bottom: 20px;\n`;\n\n\nconst Settings: React.FC = () => {\n    const settings = useSelector((state: RootState) => state.settings);\n    const dispatch = useDispatch();\n    const [t] = useTranslation();\n\n    const languageOptions = [{label: \"EN\", value: \"en\"}, {label: \"DE\", value: \"de\"}];\n    const languageWithInheritOptions = [...languageOptions, {label: t(\"common.inherit\"), value: \"inherit\"}];\n    const enableOptions = [{label: t(\"common.enable\"), value: true}, {label: t(\"common.disable\"), value: false}];\n\n    const updateSettings = (updatedSettings: {interfaceSettings?: {}, mathSettings?: {}}) => {\n        dispatch({\n            type: \"SET_SETTINGS\",\n            payload: {\n                interfaceSettings: {...settings.interfaceSettings, ...updatedSettings.interfaceSettings},\n                mathSettings: {...settings.mathSettings, ...updatedSettings.mathSettings}\n            }\n        });\n    };\n\n    return (\n        <Container>\n            <SettingsCard>\n                <h1>{t(\"settings.interface\")}</h1>\n                <SettingsItem\n                    label=\"settings.language\"\n                    options={languageOptions}\n                    value={settings.interfaceSettings.language}\n                    setter={value => updateSettings({interfaceSettings: {language:  value}})}\n                />\n                <SettingsItem\n                    label=\"settings.advanced_input_mode\"\n                    options={enableOptions}\n                    value={settings.interfaceSettings.advancedInputMode}\n                    setter={value => updateSettings({interfaceSettings: {advancedInputMode: value === \"true\"}})}\n                />\n                <SettingsItem\n                    label=\"settings.show_cell_numbers\"\n                    options={enableOptions}\n                    value={settings.interfaceSettings.showLineNumbers}\n                    setter={value => updateSettings({interfaceSettings: {showLineNumbers: value === \"true\"}})}\n                />\n                <SettingsItem\n                    label=\"settings.copy_cell_content_on_click\"\n                    options={enableOptions}\n                    value={settings.interfaceSettings.copyCellContentOnClick}\n                    setter={value => updateSettings({interfaceSettings: {copyCellContentOnClick: value === \"true\"}})}\n                />\n                <SettingsItem\n                    label=\"settings.copy_manual_content_on_click\"\n                    options={enableOptions}\n                    value={settings.interfaceSettings.copyManualContentOnClick}\n                    setter={value => updateSettings({interfaceSettings: {copyManualContentOnClick: value === \"true\"}})}\n                />\n                <SettingsItem\n                    label=\"settings.cell_language_tag\"\n                    options={languageWithInheritOptions}\n                    value={settings.interfaceSettings.cellLanguageTag}\n                    setter={value => updateSettings({interfaceSettings: {cellLanguageTag: value}})}\n                />\n            </SettingsCard>\n            <SettingsCard>\n                <h1>{t(\"settings.calculator\")}</h1>\n                <SettingsItem\n                    label=\"settings.significant_decimal_places\"\n                    options={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15].map(x => {return {\n                        label: `${x}`,\n                        value: x\n                    }})}\n                    value={settings.mathSettings.significantDigits}\n                    setter={value => updateSettings({mathSettings: {significantDigits: value}})}\n                />\n                <SettingsItem\n                    label=\"settings.number_format\"\n                    options={languageWithInheritOptions}\n                    value={settings.mathSettings.numberFormat}\n                    setter={value => updateSettings({mathSettings: {numberFormat: value}})}\n                />\n            </SettingsCard>\n        </Container>\n    )\n}\n\nexport default Settings","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {RootState} from \"../../../store/index\";\nimport {changeCurrentInput} from \"../../../store/session/actions\";\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 3fr 7fr;\n    padding: 10px 20px;\n    grid-gap: 20px;\n    \n    &:hover {\n        outline: 2px solid black;\n    }\n`;\n\nconst Synopsis = styled.div<{copyable: boolean}>`\n    ${props => props.copyable ? `&:hover {\n        background-color: rgba(0, 0, 0, 0.1);\n    }` : null}\n`;\n\nconst Description = styled.div``;\n\ninterface Props {\n    synopsis: string,\n    description: string,\n    copyOnClick: boolean\n}\n\nconst ManualItem: React.FC<Props> = ({synopsis, description, copyOnClick}) => {\n    const copyManualContentOnClick = useSelector((state: RootState) => state.settings.interfaceSettings.copyManualContentOnClick);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const copyable = copyOnClick && copyManualContentOnClick;\n\n    const synopsisOnClick = () => {\n        console.log(\"clicked\")\n        if (copyable) {\n            dispatch(changeCurrentInput(synopsis));\n            history.push(\"/\");\n        }\n    }\n\n    return (\n        <Container>\n            <Synopsis onClick={synopsisOnClick} copyable={copyable}>\n                {synopsis}\n            </Synopsis>\n            <Description>\n                {description}\n            </Description>\n        </Container>\n    )\n}\n\nexport default ManualItem;","export const escapeRegExp = (str: string) => str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\nexport const camelToSnakeCase = (str: string) => str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);","import React from \"react\";\nimport styled from \"styled-components\";\nimport {Language} from \"../../../store/settings/types\";\nimport Card from \"../../common/Card\";\nimport ManualItem from \"./ManualItem\";\nimport {useTranslation} from \"react-i18next\";\nimport {escapeRegExp} from \"../../../utils\";\n\nconst Container = styled(Card)`\n    margin-bottom: 20px;\n`;\n\n\ninterface Props {\n    title: string,\n    language: Language,\n    items: any,\n    filter: string,\n    copyOnClick: boolean,\n}\n\nconst ManualCategory: React.FC<Props> = ({title, language, items, filter, copyOnClick}) => {\n    const [t] = useTranslation();\n\n    const filterFunction = (item: any) => item.synopsis[language].match(escapeRegExp(filter))\n        || item.description[language].match(escapeRegExp(filter));\n\n    if (items.filter(filterFunction).length === 0)\n        return null;\n\n    return (\n        <Container>\n            <h1>{t(title)}</h1>\n            {\n                items\n                    .filter(filterFunction)\n                    .map((item: any, key: number) => <ManualItem key={key} copyOnClick={copyOnClick} synopsis={item.synopsis[language]} description={item.description[language]}/>)\n            }\n        </Container>\n    );\n};\n\nexport default ManualCategory;","import React, {useRef, useState} from \"react\";\nimport styled from \"styled-components\";\nimport ManualCategory from \"./ManualCategory\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../../../store\";\nimport InputText from \"../../common/InputText\";\nimport hotkeys from \"../../../hotkeys.json\";\n\n// @ts-ignore\nimport nd from \"@behrenle/number-drive\"\nimport {useTranslation} from \"react-i18next\";\nimport useRefEffect from \"../../../hooks/useRefEffect\";\nimport {camelToSnakeCase} from \"../../../utils\";\n\nconst Container = styled.div`\n    padding: 20px 15%;\n`;\n\nconst Manual: React.FC = () => {\n    const [filter, setFilter] = useState(\"\");\n    const language = useSelector((state: RootState) => state.settings.interfaceSettings.language);\n    const searchRef = useRef<HTMLInputElement>(null);\n    const [t] = useTranslation();\n    useRefEffect(searchRef, r => r.current.focus());\n\n    return (\n        <Container>\n            <InputText\n                style={{marginBottom: \"20px\"}}\n                placeholder={t(\"manual.search\")}\n                value={filter}\n                ref={searchRef}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => setFilter(event.target.value)}\n            />\n            <ManualCategory\n                title=\"manual.hotkeys\"\n                language={language}\n                items={\n                    Object.entries(hotkeys).map(hotkey => {\n                        const synopsis = hotkey[1].replaceAll(\"+\", \" + \").toUpperCase();\n                        const description = t(\"manual.hotkey_\" + camelToSnakeCase(hotkey[0]));\n                        return {\n                            synopsis: {de: synopsis, en: synopsis},\n                            description: {de: description, en: description}\n                        };\n                    })\n                }\n                filter={filter}\n                copyOnClick={false}\n            />\n            <ManualCategory\n                title=\"manual.constants\"\n                language={language}\n                items={nd.Manual.constants}\n                filter={filter}\n                copyOnClick={true}\n            />\n            <ManualCategory\n                title=\"manual.functions\"\n                language={language}\n                items={nd.Manual.functions}\n                filter={filter}\n                copyOnClick={true}\n            />\n        </Container>\n    )\n}\n\nexport default Manual","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 20px;\n    padding: 20px;\n`;\n\nconst Item = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nconst LeftItem = styled(Item)`\n    align-items: flex-end;\n    font-weight: 400;\n`;\n\nconst RightItem = styled(Item)`\n    align-items: flex-start;\n`;\n\nconst StyledSpan = styled.span`\n    font-weight: inherit;\n`;\n\ntype PropsItem = string | string[];\n\ninterface Props {\n    items: PropsItem[]\n}\n\nconst CenteredDefinitionListItem: React.FC<{item: PropsItem}> = ({item}) => {\n    if (typeof item === \"string\") {\n        return (<StyledSpan>{item}</StyledSpan>);\n    }\n    return (\n        <>\n            {\n                item.map((v, i) => <StyledSpan key={i}>{v}</StyledSpan>)\n            }\n        </>\n    )\n}\n\nconst CenteredDefinitionList: React.FC<Props> = ({items}) => {\n    return (\n        <Container>\n            {\n                items.map((v, i) => i % 2 !== 0\n                    ? <RightItem key={i}><CenteredDefinitionListItem item={v}/></RightItem>\n                    : <LeftItem key={i}><CenteredDefinitionListItem item={v}/></LeftItem>\n                )\n            }\n        </Container>\n    );\n};\n\nexport default CenteredDefinitionList;","import React from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"../../common/Card\";\nimport CenteredDefinitionList from \"./CenteredDefinitionList\";\nimport {author, dependencies, license, version} from \"../../../../package.json\";\nimport {useTranslation} from \"react-i18next\";\n\nconst Container = styled.div`\n    padding: 20px 15%;\n`;\n\nconst Content = styled.div`\n    padding: 20px;\n`;\n\n\nconst About: React.FC = () => {\n    const [t] = useTranslation();\n\n    return (\n        <Container>\n            <Card>\n                <h1>{t(\"about.general\")}</h1>\n                <CenteredDefinitionList\n                    items={[\n                        t(\"about.version\"), version,\n                        t(\"about.author\"), [author.name, author.email],\n                        t(\"about.license\"), license\n                    ]}\n                />\n            </Card>\n            <Card style={{marginTop: \"20px\"}}>\n                <h1>{t(\"about.dependencies\")}</h1>\n                <CenteredDefinitionList\n                    items={\n                        Object.entries(dependencies).flatMap(v => [\n                            v[0], v[1].charAt(0) === \"^\"\n                                ? v[1].substring(1)\n                                : v[1]\n                        ])\n                    }\n                />\n                <Content // todo maybe replace with trans component because html injection is unsafe\n                    dangerouslySetInnerHTML={{\n                        __html: t(\"about.more_info\", {url: \"https://www.npmjs.com/\", label: \"npmjs.com\"})\n                    }}\n                />\n            </Card>\n        </Container>\n    )\n}\n\nexport default About","import React from 'react';\nimport {HashRouter, Switch, Route} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport initStore from \"../../store/createStore\";\nimport \"../../i18n/index\";\nimport styled from \"styled-components\";\nimport Navbar from \"./navbar/Navbar\";\nimport Calculator from \"../views/calculator/Calculator\";\nimport Settings from \"../views/settings/Settings\";\nimport Manual from \"../views/manual/Manual\";\nimport About from \"../views/about/About\";\n\nconst store = initStore();\n\nconst views = [\n    {name: \"navbar.calculator\", path: \"/\", component: Calculator},\n    {name: \"navbar.settings\", path: \"/settings\", component: Settings},\n    {name: \"navbar.manual\", path: \"/manual\", component: Manual},\n    {name: \"navbar.about\", path: \"/about\", component: About}\n]\n\nconst navbarProps = {\n    title: `Math Explorer`,\n    items: views.map(view => {return {name: view.name, path: view.path}})\n};\n\nconst Container = styled.div`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background-size: cover;\n    background-image: url(${process.env.PUBLIC_URL + \"/background.png\"});\n    display: grid;\n    grid-template-rows: 80px auto;\n`;\n\nconst Content = styled.div`\n    z-index: 0;\n    overflow-y: auto;\n    width: 100%;\n    height: 100%;\n`;\n\nconst App: React.FC = () => {\n    return (\n        <Provider store={store}>\n            <HashRouter>\n                <Container>\n                    <Navbar {...navbarProps}/>\n                    <Content>\n                        <Switch>\n                            {views.map((view, i) => <Route key={i} exact path={view.path} component={view.component}/>)}\n                        </Switch>\n                    </Content>\n                </Container>\n            </HashRouter>\n        </Provider>\n    );\n};\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register() {\n    if (\"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL!,\n            window.location.toString(),\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://goo.gl/SC7cgQ\",\n                    );\n                });\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === \"installed\") {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log(\"New content is available; please refresh.\");\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log(\"Content is cached for offline use.\");\n                            }\n                        }\n                    };\n                }\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\",\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().catch(console.error);\n        });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport {register as registerServiceWorker} from \"./serviceWorker\";\n\nregisterServiceWorker();\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}